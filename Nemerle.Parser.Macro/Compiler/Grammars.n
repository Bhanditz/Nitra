using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.Parser
{
  /// <summary>
  /// Description of Grammars.
  /// </summary>
  internal class Grammars
  {
    private _grammarCompilers : List[GrammarCompiler] = List();
    private _typer : Compiler.Typer;

    public this(typer : Compiler.Typer)
    {
      _typer = typer;
    }

    public Add(gc : GrammarCompiler) : void
    {
      _grammarCompilers.Add(gc);
    }

    public Generate() : void
    {
      when (!_typer.Manager.IsIntelliSenseMode)
      {
        def descriptors = _grammarCompilers.Map(gc => <[ typeof($(gc.GrammarTB.GetMemType() : typed).GrammarImpl) ]>).NToList();
        def grammars = <[ Nemerle.Parser.GrammarsAttribute(array[..$descriptors]) ]>;
        _typer.Manager.Hierarchy.AddAssemblyAttribute(_typer.Manager.CoreEnv, grammars);
      }
    }
  }
}
