using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

namespace Nemerle.Parser
{
  partial internal class GrammarCompiler
  {
    public DefineAllMethods() : void
    {
      DefineGetMaxRollbackPos();
      DefineGetRuleName();
      DefineResetMaxRollbackPos();
      DefineResetMemoization();
      DefineInitExtensionRules();

      foreach (tb in _externalGrammars with grammarId)
      {
        match (tb.GetAllSubTypes().Find(tb => tb.Name == "Grammar"))
        {
          | Some(subTB) =>
            DefineImplementation(<[decl:
              private mutable $($"_grammar$grammarId" : dyn) : $(subTB.GetMemType() : typed)
            ]>);

          | None() =>
            Message.Error("Invalid external grammar.");
        }
      }

      _implTB.Compile();
    }
  }
}
