using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Assertions;
using Nemerle.Imperative;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

namespace Nemerle.Parser
{
  partial internal class GrammarCompiler
  {
    public DoTyping() : void
    {
      LoadExternalGrammars();

      _allRules = CheckRuleCalls(_parsedGrammar);

      def typedGrammar = AddArgumentCaptures(_parsedGrammar);
      def untypedGrammar = RemoveAllCaptures(typedGrammar);

      _typedGrammar   = if(_isDebug) typedGrammar   else OptimizeGrammar(typedGrammar);
      _untypedGrammar = if(_isDebug) untypedGrammar else OptimizeGrammar(untypedGrammar);
    }
  }
}
