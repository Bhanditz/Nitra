using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

namespace Nemerle.Parser
{
  partial internal class GrammarCompiler
  {
    public GetRuleType(name : NameRef) : RuleType
    {
      match (ParsedGrammar.GetRule(name))
      {
        | ExternalRule as rd => _externalRuleTypeGetters[rd.grammarRef.Id](rd.Name)
        | ExtentionPoint(ty)
        | Simple(ty, _) =>
          match (ty)
          {
            | NType(ty) when ty.Equals(ty.Manager.InternalType.Void) =>
              RuleType.Void()
            | ty => ty
          }

        | ExtentionPrefix(baseRuleName, _)
        | ExtentionPostfix(baseRuleName, _, _) =>
          GetRuleType(baseRuleName)
      }
    }
  }
}
