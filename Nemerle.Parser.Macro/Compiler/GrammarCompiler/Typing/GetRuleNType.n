using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Parser.Model;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

namespace Nemerle.Parser
{
  partial internal class GrammarCompiler
  {
    [Memoize]
    public GetRuleNType(rule : RuleDefinition) : TypeVar
    {
      match (GetRuleType(rule.Name))
      {
        | NType(ty) => ty
        | _         => Message.FatalError(rule.Name.Location, "Implementation error. GetRuleNType");
      };
    }

    [Memoize]
    public GetBaseRuleNType(rule : RuleDefinition) : TypeVar
    {
      def baseRuleName = match (rule)
      {
        | RuleDefinition.ExtentionPostfix as rd => rd.baseRuleName
        | RuleDefinition.ExtentionPrefix as rd  => rd.baseRuleName
        | _                                     => Message.FatalError(rule.Name.Location, "Implementation error. GetBaseRuleNType");
      }
      match (GetRuleType(baseRuleName))
      {
        | NType(ty) => ty
        | _         => Message.FatalError(rule.Name.Location, "Implementation error. GetBaseRuleNType");
      };
    }
  }
}
