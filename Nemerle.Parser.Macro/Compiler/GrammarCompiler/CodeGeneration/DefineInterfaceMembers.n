using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

namespace Nemerle.Parser
{
  partial internal class GrammarCompiler
  {
    private DefineInterfaceMembers() : void
    {
      DefineInterface(<[decl:
        public abstract Parser : Nemerle.Parser.Internal.Parser { get; }
      ]>);

      DefineInterface(<[decl:
        public GetText(tok : Nemerle.Parser.NToken) : string
        {
          _parsingSource.OriginalText.Substring(tok.StartPos, tok.EndPos - tok.StartPos)
        }
      ]>);

      DefineInterface(<[decl:
        public GetLocation(tok : Nemerle.Parser.NToken) : Nemerle.Parser.Location
        {
          Nemerle.Parser.Location(_parsingSource, tok.StartPos, tok.EndPos)
        }
      ]>);

      DefineInterface(<[decl: private mutable _parsingSource : Nemerle.Parser.SourceSnapshot; ]>);

      DefineInterface(<[decl:
        public ParsingSource : Nemerle.Parser.SourceSnapshot
        {
          get { _parsingSource }
        }
      ]>);

      DefineParseMethods()
    }
  }
}
