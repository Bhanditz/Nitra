using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

namespace Nemerle.Parser
{
  partial internal class GrammarCompiler
  {
    public DefineInterface(member : ClassMember) : void
    {
      if (_emitDebugSources)
        _ = GrammarTB.DefineWithSource(member)
      else
        GrammarTB.Define(member)
    }

    public DefineImplementation(member : ClassMember) : void
    {
      if (_emitDebugSources)
        _ = ImplTB.DefineWithSource(member)
      else
        ImplTB.Define(member)
    }

    public DefineDescriptorMember(member : ClassMember) : void
    {
      if (_emitDebugSources)
        _ = _grammarDescriptorImpl.DefineWithSource(member)
      else
        _grammarDescriptorImpl.Define(member)
    }

    public DefineDescriptorClass(member : ClassMember.TypeDeclaration) : void
    {
      _grammarDescriptorImpl.DefineNestedType(member).Compile()
    }
  }
}
