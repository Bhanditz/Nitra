using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Assertions;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

using Nemerle.Parser.Internal;

namespace Nemerle.Parser
{
  partial internal class GrammarCompiler
  {
    private MakeGrammarImpl() : ClassMember.TypeDeclaration
    {
      <[decl:
        public sealed class GrammarImpl : $(GrammarTB.GetMemType() : typed), IGrammar
        {
          public override Parser : Nemerle.Parser.Internal.Parser { get; private set; }

          public this() {}

          public this([NotNull] parser : Nemerle.Parser.Internal.Parser)
          {
            Parser = parser;
          }

          private mutable _parsingErrors : ParsingErrorsImpl;

          private static _descriptor : GrammarDescriptor = GrammarDescriptorImpl();
          public static StaticDescriptor : GrammarDescriptor { get { _descriptor } }
          public Descriptor : GrammarDescriptor { get { _descriptor } }
        }
      ]>
    }
  }
}
