using Nemerle.Collections;

namespace Nemerle.Parser
{
  partial internal class GrammarCompiler
  {
    private _calledRules : Hashtable[NameRef * bool, int] = Hashtable();
    private _rulesToCall : Stack[NameRef * bool] = Stack();
    public CallRule(name : NameRef, useResult : bool) : void
    {
      def useResult = if (TypedGrammar.GetRule(name) is RuleDefinition.Simple) useResult else true;
      def key = (name, useResult);
      when (!_calledRules.Contains(key))
      {
        _calledRules.Add(key, 0);
        _rulesToCall.Push(key);
      }
    }
  }
}
