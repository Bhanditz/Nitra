using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Typedtree;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

namespace Nemerle.Parser
{
  partial internal class RuleCompiler
  {
    public CompileAsPostfix(rule : Rule, results : list[string]) : option[PExpr]
    {
      match (rule : Rule)
      {
        | Capture(Handler as kind, Sequence((Call as first) :: tail)) when first.name.Id == _ruleToCompile.Name.Id =>
          def rules = tail;
          def rule = Rule.Capture(kind, Rule.Sequence(rules));
          Some(CompileRule(rule, results))

        | _ => None()
      }
    }
  }
}
