using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Typedtree;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

namespace Nemerle.Parser
{
  partial internal class RuleCompiler
  {
    public CompileRuleCapture(rule : Rule.Capture, results : list[string]) : PExpr
    {
      match (rule)
      {
        | Capture(Chars, subrule) =>
          def code = CompileRule(subrule, []);
          match (results)
          {
            | []       => code;
            | [result] =>
              <[
                def newPos = $code;
                when (newPos >= 0)
                  $(result : dyn) = Nemerle.Parser.NToken(pos, newPos);
                newPos
              ]>
            | _ => assert(false);
          }

        | Capture(_, subrule) => CompileRule(subrule, results);
      }
    }
  }
}
