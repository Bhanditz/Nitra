// REFERENCE: RuleMethod-caching-2-syntax
using Nitra;
using System.Console;

module Program
{
  Main() : void
  {
    Test("x");
    Test("y");
  }

  Test(text : string) : void
  {
    def source = SourceSnapshot(text);
    def result = CachingTest2.Start.Parse(source);
    if (result.IsSuccess)
    {
      def ast = CachingTest2ParseTree.Start.CreateParseTree(result).A;

      // accessing non-computed value
      try
      {
        _ = ast.ComputedFoo;
        WriteLine("Non-computed value not detected");
      }
      catch
      {
        | e => WriteLine(e.Message);
      }
      // check saving value
      def foo1 = ast.Foo(10);
      def foo2 = ast.Foo(20);
      if ((foo1 == foo2) && (foo2 == ast.ComputedFoo))
        WriteLine("OK");
      else
        WriteLine("Caching is broken");
    }
    else
      WriteLine("Parse failed");
  }
}
/*
BEGIN-OUTPUT
Rule method value not computed yet.
OK
Rule method value not computed yet.
OK
END-OUTPUT
*/
