using Nemerle;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Imperative;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;

using TestUtil.Utils;

namespace TestUtil.Framework
{
  /// <summary>
  /// Description of GoldTest.
  /// </summary>
  public sealed class GoldTest : Test
  {
    public this(filePath : string)
      requires !string.IsNullOrEmpty(filePath)
    {
      _filePath = filePath;
      Name = Path.GetFileNameWithoutExtension(filePath);
    }

    public override Name : string { get }

    public override Run() : Result
    {
      unless(File.Exists(_filePath))
        return Result.UnableToRun("File not found");

      def testSource = N2.SourceSnapshot(File.ReadAllText(_filePath), fileName = _filePath);
      def parser = TestParser.GrammarImpl();
      def (pos, ast) = parser.TryParseStart(testSource);

      unless (pos >= 0)
        return Result.UnableToRun("Failed to parse test source");

      match(GrammarLoader.Load(Path.GetDirectoryName(_filePath), ast))
      {
        | Success(_) => Result.Success()
        | Fail(message) => Result.Fail(message)
      }
    }

    private _filePath : string;
  }
}
