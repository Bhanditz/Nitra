using Nemerle;
using Nemerle.Collections;
using Nemerle.Surround;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

[assembly: DefineSurround("Red", false,
  Console.ForegroundColor = ConsoleColor.Red,
  Console.ResetColor())]

[assembly: DefineSurround("Green", false,
  Console.ForegroundColor = ConsoleColor.Green,
  Console.ResetColor())]

[assembly: DefineSurround("Yellow", false,
  Console.ForegroundColor = ConsoleColor.Yellow,
  Console.ResetColor())]

namespace TestUtil.Framework
{
  /// <summary>
  /// Description of ConsoleExecutionListener.
  /// </summary>
  public sealed class ConsoleExecutionListener : ExecutionListener
  {
    public override Start() : void
    {
      _passed = 0;
      _failed = 0;
      _notRun = 0;
    }

    public override TestStart(test : Test) : void
    {
      Console.Write(test.Name);
      Console.Write(": ");
    }

    public override TestComplete(test : Test, result : Result) : void
    {
      _ = test;
      match(result)
      {
        | Success =>
          _passed += 1;
          surroundwith(Green)
            Console.WriteLine("Success");
        | Fail(message) =>
          _failed += 1;
          surroundwith(Red)
            Console.WriteLine(message);
        | UnableToRun(message) =>
          _notRun += 1;
          surroundwith(Yellow)
            Console.WriteLine(message);
      }
    }

    public override Complete() : void
    {
      match((_passed, _failed, _notRun))
      {
        | (0, 0, 0) =>
          surroundwith(Yellow)
            Console.WriteLine("No tests to run.");

        | (_, 0, 0) =>
          surroundwith(Green)
            Console.WriteLine($"All $_passed tests passed.");

        | (_, 0, _) =>
          surroundwith(Yellow)
            Console.WriteLine($"$_passed tests passed, $_notRun tests skipped");

        | (_, _, 0) =>
          surroundwith(Yellow)
            Console.WriteLine($"$_passed tests passed, $_failed tests failed");

        | (_, _, _) =>
          surroundwith(Red)
            Console.WriteLine($"$_passed tests passed, $_failed tests failed, $_notRun tests skipped");
      }
    }

    private mutable _passed : int;
    private mutable _failed : int;
    private mutable _notRun : int;
  }
}
