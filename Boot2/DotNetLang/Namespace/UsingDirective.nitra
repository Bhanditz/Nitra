using DotNet;

using Nitra;
using Nitra.Declarations;

namespace DotNet
{
  abstract ast UsingDirective : ScopedAst, NamespaceMember
  {
  }

  declaration UsingAliasDirective : UsingDirective, Alias
  {
    symbol
    {
      Kind      = "alias";
      SpanClass = DotNetLang.AliasSpanClass;
    }

    ContainingTable           = UsingAliasesScope;
    NamespaceOrTypeName.Scope = CurrentScope;
    Symbol.Replacement        = NamespaceOrTypeName.Ref;

    NamespaceOrTypeName : QualifiedReference;
  }

  ast UsingOpenDirective : UsingDirective
  {
    ContainingTable           = null;
    NamespaceOrTypeName.Scope = CurrentScope;
    OpeningOut                = OpeningIn.UnionWith(NamespaceOrTypeName.Ref.Scope);

    //unless (NamespaceOrTypeName.Ref.Symbol is NamespaceSymbol || NamespaceOrTypeName.Ref.Symbol is SyntaxModuleSymbol)
    //  Error("Using directive can open only namespace or syntax module.");

    NamespaceOrTypeName : QualifiedReference;
  }
}
