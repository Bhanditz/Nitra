using Nitra.ProjectSystem;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Typing
{
  [Record]
  public abstract class SimpleNameContext[TSymbol] : Context
    where TSymbol : Symbol
  {
    public abstract SymbolMap : Map[string, TSymbol] { get; }

    public sealed override BindMany[T](path : list[Location]) : BindingResult[T]
    {
      | [one] => BindMany(one)
      | _ => base.BindMany(path)
    }

    public sealed override BindMany[T](name : Location) : BindingResult[T]
    {
      match (SymbolMap.Find(name.GetText()))
      {
        | Some(symbol is T) =>
          Project.AddSymbolRef(symbol, name);
          BindingResult(name, [symbol], CompilerMessage.EmptyCompilerMessages)

        | _ => base.BindMany(name)
      }
    }
  }
}
