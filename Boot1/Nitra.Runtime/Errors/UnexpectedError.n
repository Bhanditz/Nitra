using System.Text;
using Nemerle;
using Nemerle.Collections;
using Nemerle.Extensions;
using Nemerle.Text;
using Nemerle.Utility;

using Nitra.Internal;
using Nitra.Runtime.Reflection;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;

namespace Nitra.Runtime.Errors
{
  public class UnexpectedError : ParseError
  {
    public this(loc : Location)
    {
      base(loc);
    }

    public override Message : string { [Memoize] get { MakeMessage() } }

    public override DebugText : string
    {
      [Memoize] get
      {
        MakeMessage()
      }
    }

    private MakeMessage() : string
    {
      def maxLength = 30;
      def sb = StringBuilder(maxLength + 30);
      _ = sb.Append("Unexpected token: \'");
      _ = sb.AppendEscapedString(Location.Source.Text, Location.StartPos, Math.Min(Location.Length, maxLength));
      when (Location.Length > maxLength)
        _ = sb.Append("...");
      _ = sb.Append("\'");
      sb.ToString();
    }

    public override ToString() : string {  MakeMessage() }
  }
}
