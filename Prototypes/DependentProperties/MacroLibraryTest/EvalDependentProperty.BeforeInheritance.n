using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Typedtree;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;


namespace Nitra.DependentProperties
{
  [MacroUsage(MacroPhase.BeforeInheritance, MacroTargets.Method)]
  macro EvalDependentProperty(typeBuilder : TypeBuilder, method : ClassMember.Function)
  {
    EvalDependentPropertyImpl.DoTransform(Macros.ImplicitCTX(), typeBuilder, method)
  }
  
  partial module EvalDependentPropertyImpl
  {
    public DoTransform(typer : Typer, typeBuilder : TypeBuilder, method : ClassMember.Function) : void
    {
      Macros.DefineCTX(typer);
      _ = method;
      _ = typeBuilder.Define(<[ decl: 
        public override Calc($("context" : global) : Context) : void
        {
        } ]>);
    }
  }
}
