using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Serialization
{
  public abstract class ComplexTypeSerializationBuilder : TypeSerializationBuilder
  {
    public this(compiler : SerializationCompiler, type : FixedType)
    {
      base(compiler, type);

      def id = compiler.Manager.GetNewId().ToString();
      WriteMethodName = "_N_" + type + "_Write_" + id;
      ReadMethodName  = "_N_" + type + "_Read__" + id;
    }

    public WriteMethodName : string { get; }
    public ReadMethodName  : string { get; }

    public override Write(obj : PExpr) : PExpr
    {
      Compiler.CallWriteMethod(WriteMethodName, obj);
    }

    public override Read(memberName : PExpr, typeTag : PExpr) : PExpr
    {
      Compiler.CallReadMethod(ReadMethodName, memberName, typeTag);
    }
  }
}
