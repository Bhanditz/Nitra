using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler.Parsetree;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using SCG = System.Collections.Generic;
using System.Linq;

using N2.Model;

namespace N2.Compiler
{
  internal sealed partial class TryParseMethodEmitter : MethodEmitter
  {
    public override CompileOption(code : SCG.List[PExpr], field : RuleStructureField.Option) : void
    {
      code.Add(<[
        $(Data(field).ParseLabel.Label());
          _ = $(field.SrcRule.ToString());
          $(Data(field.Rule).AstStart) = $CurTextPos;
          $(Data(field.Rule.Fields[0]).ParseLabel.Goto());

        $(Data(field.Rule).OkLabel.Label());
          $(Data(field).ContinueParseLabel.Goto());

        $(Data(field.Rule).FailLabel.Label());
          $CurTextPos = $(Data(field.Rule).AstStart);
          $(Data(field).ContinueParseLabel.Goto());
      ]>);
      CompileFields(code, field.Rule.Fields);
    }
  }
}
