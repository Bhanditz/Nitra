using N2.Typing;
using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler.Parsetree;
using Nemerle.Imperative;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using SCG = System.Collections.Generic;
using System.Linq;

using N2.Model;

namespace N2.Compiler
{
  internal sealed partial class TryParseMethodEmitter : MethodEmitter
  {
    public CompileIsStateCanParseEmptyString(ruleStructure : RuleStructure.Ast) : PExpr
    {
      def cases = SCG.List();
      foreach (field in ruleStructure.AllFields)
        cases.Add(<[ case: | $(field.State) => $(field.CanParseEmptyString) ]>);
      cases.Add(<[ case: | x => assert(false, $"Unknown parse state '$x'.") ]>);
      
      <[ match (start) { ..$cases } ]>
    }
  }
}
