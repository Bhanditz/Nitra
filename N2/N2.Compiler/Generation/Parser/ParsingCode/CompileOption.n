using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler.Parsetree;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using SCG = System.Collections.Generic;
using System.Linq;

using N2.Model;

namespace N2.Compiler
{
  internal abstract partial class RuleParserEmitter
  {
    public CompileOption(code : SCG.List[PExpr], field : RuleStructureField.Option) : void
    {
      code.Add(<[
      $(field.ParseLabel.Label());
        $(AllocateParentAst(field));
        $(field.Rule.AstStart) = $CurTextPos;
        $(field.Rule.Fields[0].ParseLabel.Goto());

      $(field.Rule.OkLabel.Label());
        $(field.Owner.AstPtr.Set(field, <[ $CurTextPos - $(field.Rule.AstStart) ]>));
        $(field.ContinueParseLabel.Goto());

      $(field.Rule.FailLabel.Label());
        $(field.Owner.AstPtr.Set(field, <[ 0 ]>));
        $CurTextPos = $(field.Rule.AstStart);
        $(field.ContinueParseLabel.Goto());
      ]>);
      CompileFields(code, field.Rule.Fields);
    }
  }
}
