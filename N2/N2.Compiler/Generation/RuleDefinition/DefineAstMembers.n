using Nemerle;
using Nemerle.Collections;
using Nemerle.Imperative;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Typedtree;

using N2.Internal;
using N2.Model;
using N2.Typing;

using System;
using System.Diagnostics;
using System.Linq;
using SCG = System.Collections.Generic;

namespace N2.Compiler
{
  internal partial class RuleDefinitionEmitter
  {
    public DefineAstMembers() : void
    {
      when (_spliceTb != null)
        DefineSpliceGetDump();
      when (_errorTb != null)
        DefineErrorGetDump();
    }

    private DefineSpliceGetDump() : void
    {
      _ = _spliceTb.DefineWithSource(<[decl:
        public override GetDump() : N2.Internal.AstDump
        {
          N2.Internal.AstDump.Splice($(_baseTb.FullName : string))
        }
      ]>);
    }

    private DefineErrorGetDump() : void
    {
      _ = _errorTb.DefineWithSource(<[decl:
        public override GetDump() : N2.Internal.AstDump
        {
          N2.Internal.AstDump.Error($(_baseTb.FullName : string), GetText())
        }
      ]>);
    }
  }
}
