using N2.Model;

using Nemerle;
using Nemerle.Compiler;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace N2.Compiler
{
  internal class EmitterEnvironment
  {
    public Manager        : ManagerClass { get; }
    public IsDebug        : bool         { get; }
    public OptionTypeInfo : TypeInfo     { get; }
    public ListTypeInfo   : TypeInfo     { get; }
    public AstTypeInfo    : TypeInfo     { get; }
    public AstTypeVar     : FixedType    { get; }
    public NTokenTypeInfo : TypeInfo     { get; }
    public NTokenTypeVar  : FixedType    { get; }

    public this(manager : ManagerClass)
    {
      Manager        = manager;
      IsDebug        = manager.Options.IsConstantDefined("DEBUG") || manager.Options.IsConstantDefined("PARSER_DEBUG");
      OptionTypeInfo = Manager.LookupTypeInfo("Nemerle.Core.option", 1);
      ListTypeInfo   = Manager.LookupTypeInfo("Nemerle.Core.list", 1);
      AstTypeInfo    = Manager.LookupTypeInfo("N2.Ast", 0);
      AstTypeVar     = FixedType.Class(AstTypeInfo, []);
      NTokenTypeInfo = Manager.LookupTypeInfo("N2.NToken", 0);
      NTokenTypeVar  = FixedType.Class(NTokenTypeInfo, []);
    }
  }
}
