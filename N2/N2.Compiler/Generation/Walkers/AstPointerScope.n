using N2.Model;
using N2.Typing;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace N2.Compiler
{
  public sealed class AstPointerScope : IVariableEmitter
  {
    private         _ruleStructure   : RuleStructure;
    private         _baseName        : string;
    private         _constantEmitter : IConstantEmitter;
    private mutable _astPointer      : AstPointer;
    private mutable _compiled        : bool;

    // stuff for AstPointer.New
    CreateVariable(name : string) : string implements IVariableEmitter.CreateVariable { name }

    internal this(ruleStructure : RuleStructure, baseName : string, constantEmitter : IConstantEmitter)
    {
      _ruleStructure   = ruleStructure;
      _baseName        = baseName;
      _constantEmitter = constantEmitter;
    }

    internal this(astPointer : AstPointer)
    {
      _astPointer = astPointer;
    }

    public Access() : AstPointer
    {
      assert(!_compiled);

      when (_astPointer == null)
        _astPointer = AstPointer.New(_ruleStructure, _constantEmitter, this, _baseName);
      _astPointer
    }

    public IsAccessed() : bool { _astPointer != null }

    internal Compile(bodyCode : PExpr) : PExpr
    {
      assert(!_compiled);
      assert(_ruleStructure != null);

      _compiled = true;
      if (_astPointer == null)
        bodyCode
      else
        <[
          def $(_astPointer.Name : dyn) = parser.GetAst(pos, this.RuleParser.$(_ruleStructure.AstId : dyn));
          $bodyCode;
        ]>
    }

    internal Compile(noAstCode : PExpr, bodyCode : PExpr) : PExpr
    {
      assert(!_compiled);
      assert(_ruleStructure != null);

      _compiled = true;
      if (_astPointer == null)
        bodyCode
      else
        <[
          def $(_astPointer.Name : dyn) = parser.TryGetAst(pos, this.RuleParser.$(_ruleStructure.AstId : dyn));
          if ($(_astPointer.Name : dyn) > 0)
            $bodyCode;
          else
            $noAstCode;
        ]>
    }
  }
}
