using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

using Nemerle.Parser.Internal;

namespace Nemerle.Parser
{
  internal partial class GrammarCompiler
  {
    public DefineInit() : void
    {
      DefineImplementation(<[decl:
        public Init() : void
        {
          _parsingSource = Parser.ParsingSource;
          _parsingErrors = Parser.GetParsingErrorsForGrammar($(GrammarImplTB.GetMemType() : typed).StaticDescriptor) :> ParsingErrorsImpl;
          { ..$(_externalGrammars.Map((grammarRef, tb) => <[ $(DecorateGrammarRef(grammarRef) : dyn) = Parser.GetGrammar($(tb.GetMemType() : typed).StaticDescriptor).Value :> $(tb.GetMemType() : typed) ]> )) }
          LoadExtensionRules();
        }
      ]>);
    }
  }
}
