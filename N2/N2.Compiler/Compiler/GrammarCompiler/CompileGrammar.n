using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using N2.Model;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

namespace N2
{
  internal partial class GrammarCompiler
  {
    public CompileGrammar() : void
    {
      def compileRule(name)
      {
        def rule = TypedGrammar.GetRule(name);

        try
        {
          RuleCompiler(this, rule).CompileRule();
        }
        catch
        {
          | ex => Message.Error(name.Location, ex.Message);
        }
      }

      foreach (ruleDef in TypedGrammar.Rules)
      {
        | RuleDefinition.ExtentionPostfix
        | RuleDefinition.ExtentionPrefix
        | RuleDefinition.ExtentionPoint
        | RuleDefinition.Regular
        | RuleDefinition.Simple           => compileRule(ruleDef.Name);
        | RuleDefinition.Marker
        | RuleDefinition.ExternalRule     => ()
      }
    }
  }
}
