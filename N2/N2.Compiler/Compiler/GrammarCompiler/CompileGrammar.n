using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using N2.Model;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

namespace N2
{
  internal partial class GrammarCompiler
  {
    public _ruleCompilers : SCG.Dictionary[RuleDefinition, RuleCompiler] = SCG.Dictionary();

    public CompileGrammar() : void
    {
      foreach (rd in TypedGrammar.Rules)
      {
        | RuleDefinition.ExtentionPostfix
        | RuleDefinition.ExtentionPrefix
        | RuleDefinition.ExtentionPoint
        | RuleDefinition.Regular
        | RuleDefinition.Simple           => _ruleCompilers.Add(rd, RuleCompiler(this, rd))
        | RuleDefinition.Marker
        | RuleDefinition.ExternalRule     => ()
      }
      foreach (compiler in _ruleCompilers.Values)
       compiler.CompileRule();
    }
  }
}
