using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Assertions;
using N2.Model;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

using N2.Internal;

namespace N2
{
  internal partial class GrammarCompiler
  {
    public DecorateRuleName(name : NameRef) : string
    {
      $"_#_$(name.Parts.Last())_"
    }

    public DecorateRuleName(rd : RuleDefinition) : string
    {
      DecorateRuleName(rd.Name)
    }

    public DecorateRuleClassName(rd : RuleDefinition) : string
    {
      match (rd)
      {
        | ExtentionPoint   => $"_#point#___$(rd.Name.AsName)_"
        | ExtentionPrefix  => $"_#prefix#__$(rd.Name.AsName)_"
        | ExtentionPostfix => $"_#postfix#_$(rd.Name.AsName)_"
        | Simple           => $"_#simple#__$(rd.Name.AsName)_"
        | Regular          => $"_#regular#_$(rd.Name.AsName)_"
        | Marker
        | ExternalRule     => assert(false)
      }
    }

    public DecorateGrammarRef(grammarRef : GrammarRef) : string
    {
      $"_#grammar#$(grammarRef.Id)"
    }
  }
}
