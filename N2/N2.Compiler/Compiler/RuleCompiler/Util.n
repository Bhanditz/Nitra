using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Typedtree;
using N2.Model;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

namespace N2
{
  internal partial class RuleCompiler
  {
    public Goto(n : int) : PExpr  { PExpr.Typed(Location.Default, TExpr.Goto(_grammarCompiler.Manager.InternalType.Void, n, 1)) }
    public Label(n : int) : PExpr { PExpr.Typed(Location.Default, TExpr.Label(_grammarCompiler.Manager.InternalType.Void, n, TExpr.DefaultValue(_grammarCompiler.Manager.InternalType.Void))) }

    public MakeLabel() : int
    {
      Util.next_id(_grammarCompiler.Manager)
    }

    public MakeLabels(count : int) : array[int]
    {
      def labels = array(count);
      for(mutable i = 0; i < labels.Length; ++i)
        labels[i] = MakeLabel();
      labels
    }
  }
}
