using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Typedtree;
using N2.Model;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

namespace N2
{
  internal partial class RuleCompiler
  {
    public CompileRegularRule(rd : RuleDefinition.Regular) : void
    {
      def methodName = _grammarCompiler.DecorateRuleName(rd);

      def body = CompileFsm(GrammarCompiler.ConvertRegularRuleToFsm(_grammarCompiler.TypedGrammar, rd.rule));

      def method = <[decl:
          public static $(methodName : dyn)(pos : int, text : string) : int
          {
            unchecked
            {
              mutable c : char;
              _ = c; // eliminate warning "a local value c was never used"
              $body;
            }
          }
        ]>;

      _grammarCompiler.DefineImplementation(method);
    }
  }
}
