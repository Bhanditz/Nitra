using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler.Parsetree;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using N2.Model;

namespace N2.Compiler
{
  internal partial abstract class RuleField
  {
    [Record]
    public sealed class TokenString : RuleField
    {
      str : string;

      [RecordIgnore] public SizeRef : AstStruct.SizeField { get; private set; }

      public override CalculateAstInfo() : void
      {
        when (ParentAstStruct.IsAst)
          SizeRef = AstStruct.SizeField(ParentAstStruct);
      }

      public override Compile() : void
      {
        ParseCode = MakeParseCode(Compiler.StringCheckCode(<[ curEndPos ]>, str), <[ $(str.Length) ]>, SizeRef)
      }

      public override PrintContent() : string * string { ("TokenString", $<#"$str"#>) }
    }
  }
}
