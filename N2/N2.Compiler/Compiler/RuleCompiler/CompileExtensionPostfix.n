using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Typedtree;
using N2.Model;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

using N2.Internal;

namespace N2
{
  internal partial class RuleCompiler
  {
    public CompileExtensionPostfix(rd : RuleDefinition.ExtentionPostfix) : void
    {
      def className = _grammarCompiler.DecorateRuleClassName(rd);
      def implClass = <[decl:
        public class $(className : dyn) : N2.Internal.RuleParser
        {
          private _grammar : N2.CompositeGrammar;
          public this(grammar : N2.CompositeGrammar)
          {
            _grammar = grammar;
          }

          public override Init() : void
          {
          }

          public override Parse(pos : int, text : string, resultPos : int, ast : ref array[int]) : int
          {
          }
        }
      ]>;
      _grammarCompiler.GrammarImplTB.DefineNestedType(implClass).Compile();
    }
  }
}
