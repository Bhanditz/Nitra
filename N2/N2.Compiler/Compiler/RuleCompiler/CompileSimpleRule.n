using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Typedtree;
using N2.Model;

using System;
using System.Linq;
using SCG = System.Collections.Generic;

namespace N2
{
  internal partial class RuleCompiler
  {
    public CompileSimpleRule(rd : RuleDefinition.Simple) : void
    {
      def className = _grammarCompiler.DecorateRuleClassName(rd);
      def implClass = <[decl:
        public class $(className : dyn) : N2.Internal.SimpleRuleParser
        {
          public this(ruleId : int, grammar : N2.CompositeGrammar)
          {
            base(grammar, $(_grammarCompiler.GetDescriptorClassRef(rd)).StaticDescriptor, ruleId);
          }
        }
      ]>;
      def tb = _grammarCompiler.GrammarImplTB.DefineNestedType(implClass);
      DefineParse(tb, rd, rd.rule);
      DefineInit(tb);
      tb.Compile();
    }
  }
}
