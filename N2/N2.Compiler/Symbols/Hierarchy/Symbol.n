using Nemerle;
using Nemerle.Collections;
using Nemerle.Extensions;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace N2.Typing
{
  [StructuralEquality]
  public abstract class Symbol : Located
  {
    public this(loc : Location, name : string)
    {
      base(loc);
      Name = name;
    }

    public this(loc : Located, name : string)
    {
      base(loc.Location);
      Name = name;
    }

    public this(loc : Located)
    {
      this(loc.Location, loc.GetText());
    }
    
    public this(loc : Location)
    {
      this(loc, loc.GetText());
    }
    
    public abstract Description : string { get; }

    public FullName : string { get { Node.FullName } }

    public Name : string        { get; }
    public Node : HierarchyNode { get; internal set; }
    
    public override ToString() : string { $<#$Name ($Description) Parent: '$(Node?.Parent?.FullName ?? "not attaced to tree")'#> }
  }
}
