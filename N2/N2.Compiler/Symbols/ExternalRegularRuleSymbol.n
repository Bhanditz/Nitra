using N2.Model;
using N2.Typing;
using N = Nemerle.Compiler;

namespace N2.Compiler
{
  public class ExternalRegularRuleSymbol : RegularRuleSymbol
  {
    public this(ruleTI : N.LibraryReference.ExternalTypeInfo, name : string, options : RuleDefinitionOptions)
    {
      base(ruleTI.Location.N2Location(), name);
      Options = options;
    }
    public override IsExtentionPoint : bool                            { get { false } }
    public override Options          : RuleDefinitionOptions           { get; }
    public override Type             : RuleType                        { get { RuleType.Chars() } }
    public override Fsm              : FSM                             { get { throw System.NotImplementedException() } }
    public override Rule             : RegularRule                     { get { throw System.NotImplementedException() } }

    public override NonVoidSubRules  : list[Rule] { get { assert2(false); [] } }
    public override SubRules         : list[Rule] { get { assert2(false); [] } }
  }
}