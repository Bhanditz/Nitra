using N2.Model;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Extensions;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using G = GrammarParser2;

namespace N2.Typing
{
  [StructuralEquality]
  public class ExternalRuleRefSymbol : RuleRefSymbol
  {
    public this(location : Location, name : string, type : ExternalRuleRefSymbolType, attributes : list[RuleAttribute], isExtentionPoint : bool)
    {
      base(location, name);
      Type = match (type)
      {
        | Void  => RuleType2.Void()
        | Chars => RuleType2.Chars()
        | Ref   => RuleType2.Ref(this)
      }
      Attributes       = attributes;
      IsExtentionPoint = isExtentionPoint;
    }

    public override Type             : RuleType2           { get; }
    public          Attributes       : list[RuleAttribute] { get; }
    public override IsExtentionPoint : bool                { get; }
    public override Description      : string              { get { "external rule definition" } }
  }

  public enum ExternalRuleRefSymbolType
  {
    | Void
    | Chars
    | Ref
  }
}
