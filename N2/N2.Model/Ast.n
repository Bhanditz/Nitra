using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace N2.Model
{
  [Record]
  public variant AstStructure
  {
    public Name : NameRef { get; }
    | Extensible
    | Ast                 {                               Fields  : list[AstField]; }
    | Option              {                               Fields  : list[AstField]; }
    | Tuple               {                               Fields  : list[AstField]; }
    | List                { Min : int; Max : option[int]; Fields  : list[AstField]; }
    | List2               { Min : int; Max : option[int]; Fields1 : list[AstField]; Fields2 : list[AstField]; }
  }

  [Record]
  public variant AstField
  {
    public FieldName : NameRef { get; }
    | LeftCall
    | Ast         { name : NameRef; }
    | Void        { name : NameRef; }
    | TokenString { str  : string;  }
    | TokenCall   { name : NameRef; }
    | Predicate   { isAnd : bool; name : NameRef; }
  }
}
