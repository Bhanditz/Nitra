using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using N2.Runtime;

using System;
using System.Collections.Generic;
using System.Linq;

namespace N2.Typing
{
  internal module BindingUtils
  {
    public UnboundBindingResult[T](name : Location) : BindingResult[T]
    {
      using (msgs = CompilerMessageList())
      {
        msgs.Error(name, $"Unbound name '$(name.GetText())'", -1);
        BindingResult([], msgs.GetMessages())
      }
    }

    public AmbiguousBindingResult[T](name : Location, result : list[Symbol]) : BindingResult[T]
    {
      using (msgs = CompilerMessageList())
      {
        using (rootMsg = msgs.RootError(name, $"'$(name.GetText())' is an ambiguous reference (see related messages)", -1))
          foreach (s in result)
            foreach (loc in s.Locations)
              rootMsg.Hint(loc, "Previous definition.");
        BindingResult(result.OfType(), msgs.GetMessages())
      }
    }
  }
}
