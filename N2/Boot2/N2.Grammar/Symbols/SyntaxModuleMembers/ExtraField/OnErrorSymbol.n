using Nemerle;
using Nemerle.Collections;
using Nemerle.Extensions;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using G = N2SyntaxAst;

namespace N2.Typing.ExtraField
{
  [Record, ExportableSymbol]
  public abstract class ExtraFieldMissingValueSymbol : ExtraFieldSymbol, IBody
  {
    public abstract HandlingExtraField : SymbolRef[ExtraFieldSymbol] { get; }
    public virtual  Body               : ExtraFieldBody              { get { throw NotSupportedException() } } // implementation for external symbol
  }

  public sealed class ParsedExtraFieldMissingValueSymbol : ExtraFieldMissingValueSymbol
  {
    _ast : G.ExtraFieldMissing.Ast;

    public this(ast : G.ExtraFieldMissing.Ast)
    {
      base(ast.Name);
      _ast = ast;
    }

    public override HandlingExtraField : SymbolRef[ExtraFieldSymbol] { get { _ast.HandlingExtraField } }
    public override Body               : ExtraFieldBody              { get { _ast.Body } }
  }
}
