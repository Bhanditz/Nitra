using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler.Parsetree;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using SCG = System.Collections.Generic;
using System.Linq;

using N2.Model;

using N = Nemerle.Compiler;

namespace N2.Compiler
{
  internal partial class FindRecoveryPositionMethodEmitter : MethodEmitter
  {
    public override CompileTokenString(code : SCG.List[PExpr], field : RuleStructureField.TokenString) : void
    {
      code.Add(
      <[
      $(ParseLabel(field));
        _ = $(field.ToString());
        if ($(RuleParserEmitter.StringCheckCode(field.String, CurTextPos)))
        {
          $CurTextPos += $(field.String.Length);
          $(GotoContinueParseLabel(field));
        }
        else
        {
          $(RecoveryCode(field));
          $(GotoFailParseLabel(field));
        }

      $(RecoveryLabel(field));
        $(GotoParseLabel(field));
      ]>)
    }
  }
}
