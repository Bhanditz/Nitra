using N2.ProjectSystem;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Imperative;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using G = GrammarParser2;

namespace N2.Typing
{
  public class KeywordRegexContext : Context
  {
    public KeywordRegexes : list[RegularRuleMatcher * RuleRefSymbol] { get; }

    public this(parent : Context, matchTokens : G.TokenRule, ruleName : G.QIdentifier)
    {
      base(parent);
      def parent     = TryGetParent.[KeywordRegexContext]();
      def rule = parent.Bind(ruleName);
      when (rule is Some(ruleSymbol))
        KeywordRegexes = (matchTokens.MakeMatcher(), ruleSymbol) :: (parent?.KeywordRegexes ?? []);
    }
    
    public IsMatch(keyword : string) : bool
    {
      foreach ((matcher, symbol) in KeywordRegexes)
        when (matcher(keyword))
          return true;
          
      false
    }
  }
}
