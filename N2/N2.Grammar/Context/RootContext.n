using N2.ProjectSystem;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace N2.Typing
{
  public sealed class RootContext : EnteredNamespaceContext
  {
    public Project : N2Project     { get; }
    
    public this(project : N2Project)
    {
      def rootNs = NamespaceSymbol("/");
      HierarchyNode().SetSymbol(rootNs);
      base(null, rootNs);
      Project = project;
    }

    public override Bind[T](name : list[Located]) : option[T]
    {
      def loop(name, node : HierarchyNode)
      {
        match (name)
        {
          | [] | null => None()
          | first :: [] =>
            node.Bind.[T](first.Location, Project)
              
          | first :: (_ :: _) as tail =>
            def next = node.Bind.[NamespaceSymbol](first.Location, Project);
            if (next is Some(nextSumbol))
              loop(tail, nextSumbol.Node)
            else
              None()
            
        }
      }
      
      loop(name, Namespace.Node)
    }
  }
}
