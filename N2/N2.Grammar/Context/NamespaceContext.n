using N2.ProjectSystem;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace N2.Typing
{
  public sealed class NamespaceAliasContext : Context
  {
    public Alias : AliasSymbol;

    public this(parent : Context, name : Located, path : list[Located])
    {
      base(parent);
      //def sym = Parent.Bind(path);
      //Alias = AliasSymbol(name, sym);
    }

    public override Bind[T](name : list[Located]) : option[T]
    {
      match (name)
      {
        | [] | null => None()
        | first :: [] =>
          if (first.GetText() == Alias.Name)
          {
            def sym = Alias.RealSymbol;
            if ((sym : object) is T)
              Some(sym :> T)
            else
              None()
          }
          else
            Parent.Bind.[T](name)
              
        | first :: (_ :: _) as tail =>
          if (first.GetText() == Alias.Name)
          {
            def sym = Alias.RealSymbol;
            sym.Node.Bind.[T](tail, Parent.GetProject())
          }
          else
            Parent.Bind.[T](name)
            
      }
    }
  }
}
