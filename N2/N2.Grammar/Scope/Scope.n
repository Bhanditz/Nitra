using N2.ProjectSystem;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using G = GrammarParser2;

namespace N2.Typing
{
  [Record]
  public class N2Scope
  {
    public Parent  : N2Scope                { get; }
    public Env     : Environment[N2Project] { get; }
    public Aliases : Map[string, Local]     { get; }
    
    public this(env : Environment[N2Project])
    {
      this(null, env, Map())
    }
    
    public Nested(alias : Local) : N2Scope
    {
      N2Scope(this, Env, Aliases.Replace(alias.Name, alias))
    }
    
    public GetNextRuleId() : int
    {
      def project = Env.Project;
      project.GetNextRuleId()
    }
    
    public Bind[TProject, TSymbol](name : G.Identifier) : option[TSymbol]
      where TSymbol: Symbol
    {
      Env.Bind.[TSymbol](name.Value(), name.Location)
    }
    
    public Bind[TProject, TSymbol](name : G.QIdentifier) : option[TSymbol]
      where TSymbol: Symbol
    {
      Env.Bind.[TSymbol](name.Parts(), name.Location)
    }
  }
}
