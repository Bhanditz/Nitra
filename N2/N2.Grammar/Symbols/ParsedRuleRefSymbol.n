using Nemerle;
using Nemerle.Collections;
using Nemerle.Extensions;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using G = GrammarParser2;

namespace N2.Typing
{
  [StructuralEquality]
  public class ParsedRuleRefSymbol[T] : RuleRefSymbol
    where T: N2.Ast
  {
    public          Value            : T         {           get; }
    public override Type             : RuleType2 { [Memoize] get { RuleType2.Ref(Node.FullNameParts) } }
    public override IsExtentionPoint : bool      {           get { Value is G.ExtentionPointRuleDecl  } }
    
    public this(value : T, name : string)
    {
      base(value, name);
      Value = value;
    }

    public override Description : string
    {
      get { typeof(T).BaseType.Name }
    }
  }
}
