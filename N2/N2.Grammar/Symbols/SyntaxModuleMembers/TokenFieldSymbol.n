using N2.Model;
using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Extensions;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using G = GrammarParser2;

namespace N2.Typing
{
  [Record, /*ExportableSymbol*/]
  public abstract class TokenFieldSymbol : SingleDefSymbol
  {
    public abstract StringLiterals : list[string] { get; } // TODO: Не ясно нормально ли здеь хранить строки. Ведь это не позволит ассоциировать сгенерированные поля с TokenFieldSymbol
    public override Description    : string { get "token field" }
  }

  [Record]
  public sealed class ParsedTokenFieldSymbol : TokenFieldSymbol
  {
    public _stringLiterals : list[G.StringLiteral];
    
    public override StringLiterals : list[string] { [Memoize] get { _stringLiterals.Map(_.Value())  } }
  }
}
