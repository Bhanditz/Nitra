using Nemerle;
using Nemerle.Collections;
using Nemerle.Extensions;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using G = GrammarParser2;

namespace N2.Typing
{
  public enum ExtraFieldModifier
  {
    | Def
    | DefPrivate
    | Abstract
    | Override
    | OnError
  }

  [Record]
  public abstract class ExtraFieldRefSymbol : SingleDefSymbol
  {
    public abstract Modifier    : ExtraFieldModifier { get; }
    public abstract IsCached    : bool               { get; }
    public override Description : string             { get "extra field" }
  }

  public class ParsedExtraFieldRefSymbol[T] : ExtraFieldRefSymbol
    where T: N2.Ast
  {
    public this (value : T, name : string, modifier : ExtraFieldModifier, isCached : bool)
    {
      base(value, name);
      Value    = value;
      Modifier = modifier;
      IsCached = isCached;
    }

    public          Value    : T                  { get; }
    public override Modifier : ExtraFieldModifier { get; }
    public override IsCached : bool               { get; }
  }
}
