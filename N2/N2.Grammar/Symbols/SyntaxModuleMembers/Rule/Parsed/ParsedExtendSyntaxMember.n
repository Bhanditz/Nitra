using N2.Model;

using G = GrammarParser2;

namespace N2.Typing
{
  public sealed class ParsedExtendSyntaxMember : ExtentionRuleSymbol
  {
    public this(ast : G.ExtendSyntaxMember.Ast)
    {
      base(ast.Name);
      Ast = ast;
    }
    
    public Ast                       : G.ExtendSyntaxMember.Ast;

    public override BaseRule         : ExtensibleRuleRef     { get { Ast.BaseRuleRef } }
    public override Type             : RuleType              { get { Ast.Type } }
    public override ExtraFields      : list[ExtraField]      { get { Ast.ExtraFields } }
    public override IsExtentionPoint : bool                  { get { false } }
    public override Options          : RuleDefinitionOptions { get { Ast.RuleAttributes.Options2() } }
    public override Rule             : Rule.Sequence         { get { Ast.TypedRule } }
  }
}
