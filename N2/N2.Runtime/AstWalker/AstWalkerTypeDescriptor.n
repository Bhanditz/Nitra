using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using N2.Internal;

namespace N2.Runtime
{
  // временный тип для обходчиков, создающих материализованный AST
  public sealed class AstWalkerTypeDescriptor : WalkerTypeDescriptor
  {
    private this() {}

    public static StaticDescriptor : AstWalkerTypeDescriptor { get; default AstWalkerTypeDescriptor() }

    public override NewHost(parserHost : ParserHost) : WalkerHost
    {
      WalkerHost(parserHost, this)
    }

    public override FindGrammarWalkerDescriptor(grammar : GrammarDescriptor) : GrammarWalkerDescriptor
    {
      grammar.GetAstWalkerDescriptor()
    }
  }

  [Record]
  public class ExtensibleRuleAstWalker[T] : ExtensibleRuleWalker[T]
  {
  }

  [Record]
  public class ExtensibleRuleAstWalkerData[T] : ExtensibleRuleWalkerData[T]
  {
    public override NewWalker(walkerData : ExtensibleRuleWalkerData[T], parser : ExtensibleRuleParser) : ExtensibleRuleWalker[T]
    {
      ExtensibleRuleAstWalker(walkerData, parser)
    }
  }
}
