using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using N2.Internal;

namespace N2
{
  public abstract class Ast : Located
  {
    public this(location : Location)
    {
      base(location);
    }

    public override ToString() : string
    {
      ToString(PrettyPrintOptions.DebugIndent)
    }

    public ToString(options : PrettyPrintOptions) : string
    {
      def writer = StringPrettyPrintWriter(options);
      PrettyPrint(writer, 0);
      writer.ToString()
    }

    public virtual PrettyPrint(writer : PrettyPrintWriter, callerBindingPower : int) : void
    {
      _ = writer;
      _ = callerBindingPower;
    }
  }

  public interface IAmbiguousAst
  {
    Location       : Location { get; }
    Ambiguitys     : IList[Ast] { get; }
    RuleDescriptor : RuleDescriptor { get; }
  }
}
