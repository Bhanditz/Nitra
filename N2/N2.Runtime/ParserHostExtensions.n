using Nemerle;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using N2.Internal;

using System;
using SCG = System.Collections.Generic;

namespace N2
{
  /// <summary>
  /// Description of ParserHostExtensions.
  /// </summary>
  public module ParserHostExtensions
  {
    public CreateAst[TAst](this parserHost : ParserHost, source : SourceSnapshot, descriptor : RuleDescriptor, ast : array[int]) : TAst
      where TAst : Ast
    {
      descriptor.CreateAst(source, parserHost, ast, ast[1], 0) :> TAst
    }

    public GetSpans(this parserHost : ParserHost, descriptor : RuleDescriptor, ast : array[int], startPos : int, endPos : int, spans : SCG.List[SpanInfo]) : void
    {
      def loc = NToken(0, ast[0]);
      when (loc.IntersectsWith(startPos, endPos))
        descriptor.GetSpans(parserHost, ast, ast[1], loc.StartPos, loc.Length, startPos, endPos, spans);
    }
  }
}
