using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;

namespace N2.Runtime.Reflection
{
  [Record]
  public variant RuleStructure
  {
    public Description : string { get; }
    public Subrules : ReadOnlyCollection[RuleInfo] { get; }

    | Ast
    | Option
    | List
    | ListWithSeparatorRule
    | ListWithSeparatorSeparator
    | Predicate

    public CalcSize(parseResult : ParseResult, startAstPointer : int) : int
    {
      mutable size = 0;
      foreach (subrule in Subrules)
        size += parseResult.RawAst[startAstPointer + subrule.Offset];
      size
    }

    public override ToString() : string
    {
      Description
    }
  }
}
