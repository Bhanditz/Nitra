using N2.Internal;
using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace N2.Runtime.Reflection
{
  public class ReflectionWalkerTypeDescriptor : WalkerTypeDescriptor
  {
    private this() {}

    public static StaticDescriptor : ReflectionWalkerTypeDescriptor { get; default ReflectionWalkerTypeDescriptor() }

    public override NewHost(parserHost : ParserHost) : WalkerHost
    {
      WalkerHost(parserHost, this)
    }

    public override FindGrammarWalkerDescriptor(grammar : GrammarDescriptor) : GrammarWalkerDescriptor
    {
      grammar.GetReflectionWalkerDescriptor()
    }
  }

  [Record]
  public class ReflectionStruct
  {
    public Description : string { get; }
    public Children : Collections.ObjectModel.ReadOnlyCollection[ReflectionStruct]{ get; }
  }

  [Record]
  public class ExtensibleRuleReflectionWalker : ExtensibleRuleWalker[ReflectionStruct]
  {
  }

  [Record]
  public class ExtensibleRuleReflectionWalkerData : ExtensibleRuleWalkerData[ReflectionStruct]
  {
    public override NewWalker(walkerData : ExtensibleRuleWalkerData[ReflectionStruct], parser : ExtensibleRuleParser) : ExtensibleRuleWalker[ReflectionStruct]
    {
      ExtensibleRuleReflectionWalker(walkerData, parser)
    }
  }
}
