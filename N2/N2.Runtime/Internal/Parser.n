using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using SCG = System.Collections.Generic;

namespace N2.Internal
{
  public struct Parser
  {
    public mutable ast : array[int];
    public mutable allocated : int;
    public parserHost : ParserHost;

    public this(initalSize : int, parserHost : ParserHost)
    {
      this.ast        = array(initalSize);
      this.allocated  = 0;
      this.parserHost = parserHost;
    }

    public Allocate(size : int) : int
    {
      def newAst = allocated;
      allocated = allocated + size;
      while (ast.Length <= allocated)
        Array.Resize(ref ast, (ast.Length * 3) / 2);

      for (mutable i = 0; i < size; ++i)
        ast[newAst + i] = -1;

      newAst
    }

    public Allocate(size : int, ruleId : int) : int
    {
      def ofs = Allocate(size);
      ast[ofs] = ruleId;
      ofs;
    }
  }
}
