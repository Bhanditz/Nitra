using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace N2.Internal
{
  [Record]
  public abstract class StartRuleParser : RuleParser
  {
    public abstract Parse(pos : int, text : string, parser : Parser) : int;
    public abstract FindRecoveryPosition(mutable curTextPos : int, text : string, parser : N2.Internal.Parser) : int;
    public abstract TryParse(recoveryStack : list[RecoveryStackFrame].Cons, startState : int, curTextPos : int, parsedStates : List[ParsedStateInfo], parser : N2.Internal.Parser) : int;
    public abstract GetParsersForState(startState : int) : array[IRecoveryRuleParser];
    public abstract IsStateCanParseEmptyString   (state : int) : bool;
    public abstract IsVoidState                  (state : int) : bool;
    public abstract IsStartState                 (state : int) : bool;
    public abstract IsLoopSeparatorStart         (state : int) : bool;
    public abstract IsLoopSeparator              (state : int) : bool;
    public abstract IsLoopBody                   (state : int) : bool;
    public abstract GetBodyStartStateForSeparator(state : int) : int;

    public abstract IsTokenRule : bool { get; }
  }
}
