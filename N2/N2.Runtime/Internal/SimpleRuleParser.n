using N2.Runtime.Reflection;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace N2.Internal
{
  public abstract class SimpleRuleParser : StartRuleParser, IRuleParserReflection, IRecoveryRuleParser
  {
    public RuleId     : int;

    public this(grammar : CompositeGrammar, descriptor : RuleDescriptor)
    {
      base(grammar, descriptor);
      RuleId = grammar.NewRuleId(this)
    }

    public abstract Init() : void;
    public abstract Reflection(ruleId : int) : RuleStructure;
    public abstract PatchAst(startPos : int, startState : int, errorIndex : int, stack : N2.Internal.RecoveryStackFrame, parser : N2.Internal.Parser) : void;
    public abstract CodeForState(state : int) : string;
    public abstract GetNextState(state : int) : int;
    
    public abstract Code           : string { get; }
    public abstract CodeWithStates : string { get; }
    public abstract RuleName       : string { get; }
    public abstract StartState     : int { get; }
  }
}
