using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace N2
{
  public interface IStartRuleDescriptor
  {
    Parse(source : SourceSnapshot, parserHost : ParserHost) : array[int];
  }

  public abstract class RuleDescriptor
  {
    public abstract Name : string { get; }
    public abstract Grammar : GrammarDescriptor { get; }
  }

  public abstract class RegularRuleDescriptor : RuleDescriptor
  {
  }

  public abstract class SimpleRuleDescriptor : RuleDescriptor
  {
    public abstract NewParser(ruleId : int, grammar : CompositeGrammar) : Internal.RuleParser;
  }

  public abstract class ExtensibleRuleDescriptor : RuleDescriptor
  {
  }

  public abstract class ExtentionRuleDescriptor : RuleDescriptor
  {
    public abstract NewParser(ruleId : int, grammar : CompositeGrammar) : Internal.ExtentionRuleParser;
    public abstract BaseRule : ExtensibleRuleDescriptor { get; }
  }

  public abstract class PrefixRuleDescriptor : ExtentionRuleDescriptor
  {
  }

  public abstract class PostfixRuleDescriptor : ExtentionRuleDescriptor
  {
    public abstract BindingPower : int { get; }
  }
}
