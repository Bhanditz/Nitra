using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace N2
{
  [System.Diagnostics.DebuggerDisplay("{Grammar.FullName}::{Name}")]
  public abstract class RuleDescriptor
  {
    public abstract Name        : string            { get; }
    public abstract Grammar     : GrammarDescriptor { get; }
    public abstract IdInGrammar : int               { get; }
    public override ToString() : string
    {
      $"$(Grammar.FullName)::$Name"
    }
  }

  public abstract class RegularRuleDescriptor : RuleDescriptor
  {
  }

  public abstract class SimpleRuleDescriptor : RuleDescriptor
  {
    public abstract IsStartRule : bool              { get; }
    public abstract NewParser(grammar : CompositeGrammar) : Internal.SimpleRuleParser;
  }

  public abstract class ExtensibleRuleDescriptor : RuleDescriptor
  {
    public abstract IsStartRule : bool              { get; }
  }

  public abstract class ExtentionRuleDescriptor : RuleDescriptor
  {
    public abstract NewParser(grammar : CompositeGrammar) : Internal.ExtentionRuleParser;
    public abstract BaseRule : ExtensibleRuleDescriptor { get; }
  }

  public abstract class PrefixRuleDescriptor : ExtentionRuleDescriptor
  {
  }

  public abstract class PostfixRuleDescriptor : ExtentionRuleDescriptor
  {
    public abstract BindingPower : int { get; }
  }
}
