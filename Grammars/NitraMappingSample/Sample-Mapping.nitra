using Nitra;
using Nitra.Runtime;
using Nitra.Declarations;
using Nitra.Runtime.Binding;

map syntax Sample.TopRule -> Top
{
  VariableDeclarations -> Variables;
}

map syntax Sample.VariableDeclaration -> Variable
{
  Name       -> Name;
  Expression -> Expression;
}

map syntax Sample.Expression -> Expression
{
  | Num -> Number
    {
      Value = ParsedValue(Digits, double.Parse(GetText(Digits)));
    }
  | Braces = Expression.GetAst();
  | Variable -> VariableRef
    {
      Reference -> Name;
    }
  | Sum -> Sum
    {
      Expression1 -> Expression1;
      Expression2 -> Expression2;
    }
  | Sub -> Sub
    {
      Expression1 -> Expression1;
      Expression2 -> Expression2;
    }
  | Mul -> Mul
    {
      Expression1 -> Expression1;
      Expression2 -> Expression2;
    }
  | Div -> Div
    {
      Expression1 -> Expression1;
      Expression2 -> Expression2;
    }
  | Plus -> Plus
    {
      Expression -> Expression;
    }
  | Minus -> Minus
    {
      Expression -> Expression;
    }
}