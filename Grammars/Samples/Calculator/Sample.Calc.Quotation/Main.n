using Nitra;
using Nitra.Quote;
using Nitra.Runtime;

using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Console;

[assembly: ImportRules(Grammar = "SplicableCalcGrammar")]

module Program
{
  Main () : void
  {
    def x          = quote <# expr: $Number(number.Create(context, "3")) #>;
    def expr       = quote <# expr: 7 + $(x) #>;
    def parseTree  = quote <# start: 2 + $(expr) * 4, 8 + 1 #>;
    WriteLine($<#Result: ..$(parseTree.Value(); ", ")#>);
    WriteLine($"Pretty print: $parseTree");

    quote match (parseTree)
    {
      | <# start: $ExprsItem(_), 8 + 1 #> => WriteLine("ok");
      | _ => WriteLine("fail")
    }

    _ = ReadKey(true);
  }
}
