namespace N2.Tests
{
  syntax module Barmaglot
  {
    using PrettyPrint;
    using Outline;
    using TokenNames;
    using StandardSpanClasses;
    using Whitespaces;
    using Identifiers;

    [ExplicitSpaces]
    syntax Comment = "/*" (!"*/" Any)* "*/";

    [StartRule, ExplicitSpaces]
    syntax RulesStart = Rules s !Any;

    alias Identifier = IdentifierBody;

    syntax TokenRule = "token" sm Identifier ";";

    syntax Rules
    {
      | TokenRule
      | TokenField = "token" sm "field" sm Identifier ";";
    }

    [StartRule, ExplicitSpaces]
    syntax CommentStart = s Comment s !Any;

    //[StartRule, ExplicitSpaces]
    //syntax Ladder = s Ladder0 !Any;
    //syntax Ladder0 = "0" Ladder1;
    //syntax Ladder1 = "1" Ladder2;
    //syntax Ladder2 = "2" Ladder3;
    //syntax Ladder3 = "3" Ladder4;
    //syntax Ladder4 = "4" Ladder5;
    //syntax Ladder5 = "5" Ladder6;
    //syntax Ladder6 = "6" Ladder7;
    //syntax Ladder7 = "7" Ladder8;
    //syntax Ladder8 = "8" Ladder9;
    //syntax Ladder9 = "9";
    //
    //[StartRule, ExplicitSpaces]
    //syntax Line = s "0" "1" "2" "3" "4" "5" "6" "7" "8" "9" !Any;
    //
    //[StartRule, ExplicitSpaces]
    //syntax InfLine = s ("0" "1" "2" "3" "4" "5" "6" "7" "8" "9")* !Any;
    //
    //[StartRule, ExplicitSpaces]
    //syntax Test = s TestTest !Any;
    //syntax TestTest = "test" "test";
    //
    //[StartRule, ExplicitSpaces]
    //syntax Start = s Jabberwocky Jajabinks !Any;
    //
    //syntax Jajabinks  = (("ja" "ja")+ "binks")+;
    //
    //syntax Jabberwocky
    //{
    //  | JabberWocky = "jabber" "wocky";
    //  | Jabber = "jabber";
    //  | Wocky = "wocky";
    //}
  }
}
