namespace Kotlin
{
  syntax module Types
  {
    using Nitra.Core;
    using Kotlin.Classes;

    syntax Type = Annotations TypeDescriptor;
    syntax TypeDescriptor
    {
      | Rounds = "(" TypeDescriptor ")"//TODO:rename?
      | FunctionType
      | UserType
      | NullableType
      | Dynamic = "dynamic"
    }

    syntax NullableType = TypeDescriptor "?";

    syntax UserType = ("package" ".")? (SimpleUserType; ".")+;

    syntax SimpleUserType = SimpleName ("<" (Argument; ",")+ ">")?
    {
      syntax OptionalProjection = VarianceAnnotation;
      syntax Argument
      {
        | Type = OptionalProjection Type
        | Star = "*"
      }
    }

    syntax FunctionType = (Type ".")? "(" (Argument; ",")+ ")" "->" Type?
    {
      syntax Argument //TODO:rename
      {
        | Parameter
        | Type = Modifiers Type
      }
    }
  }
}
