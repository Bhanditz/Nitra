namespace Nitra.Tests
{
  syntax module JsonEx
  {
    using Nitra.Core;
    using JsonParser;

    [StartRule, ExplicitSpaces]
    syntax Start = s Value !Any;

    extend syntax Value
    {
      | Rounds = '(' Value ')'

      precedence Additive:
      | Add    = Value sm '+' sm Value
      | Sub    = Value sm '-' sm Value

      precedence Multiplicative:
      | Mul    = Value sm '*' sm Value
      | Div    = Value sm '/' sm Value

      precedence Power:
      | Pow    = Value sm '^' sm Value right-associative

      precedence Unary:
      | Neg    = '-' Value
      | Plus   = '+' Value
    }
  }
}
