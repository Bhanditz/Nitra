using Nitra.Runtime.Binding;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace CSharp
{
  module Utils
  {
    public EnterNamespace(mutable scope : Scope.Table, path : Reference.IAstList, namespaceDeclaration : Namespace) : Scope.Table
    {
      def lastIndex = path.Count - 1;
      foreach (name in path with i)
      {
        mutable symbol;
        unless (scope.NameTable.TryGetValue(name, out symbol))
        {
          symbol = NamespaceSymbol(name);
          scope.Define(symbol);
        }
        when (i == lastIndex)
          symbol.Declarations ::= namespaceDeclaration;
          
        scope = (symbol :> NamespaceSymbol).Scope;
      }
      
      scope
    }
    
    public ExitNamespace(scopeIn : Scope.Table, scopeOut : Scope) : Scope.Table
    {
      _ = scopeOut;
      scopeIn
    }
  }
}
