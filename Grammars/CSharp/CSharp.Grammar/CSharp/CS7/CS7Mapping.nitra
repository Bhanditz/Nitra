using Nitra;
using Nitra.Declarations;

using DotNet;

using Nemerle.Collections;

namespace CSharp
{
  map syntax CS7.Argument.OutVar -> DotNet.Expr
  {
    OutVarArgument 
    {
      LocalVariableType -> VariableType;
      Name -> Name;
      // ArgumentNameOpt -> Name;
      // Modifier -> Modifier;
    }
  }

  map syntax CS7.Argument.OutWildcard -> DotNet.Expr
  {
    IgnoreOutVarArgument 
    {
      // ArgumentNameOpt -> Name;
      // Modifier -> Modifier;
    }
  }

  map syntax CS7.TupleArgument -> DotNet.TupleExprField
  {
    | Named   -> NamedTupleExprField   { Expression -> Expr; Reference -> Reference; }
    | Unnamed -> UnnamedTupleExprField { Expression -> Expr; }
  }

  map syntax CS7.Expression.Tuple -> DotNet.Expr
  {
    TupleExpr { TupleArguments.Item1 -> Fields; }
  }

  map syntax CS7.Expression.PatternMatching -> DotNet.Expr
  {
    PatternMatching { Expr1 -> Expr1; TypeName -> TypeName; }
  }

  map syntax CS7.TupleTypeField -> TupleTypeField
  {
    | Named   -> NamedTupleField   { AnyType -> Type; Name -> Name; }
    | Unnamed -> UnnamedTupleField { AnyType -> Type;  }
  }

  map syntax CS7.TypeName.Tuple -> QualifiedReference
  {
    TupleType { TupleTypeFields.Item1 -> Fields; }
  }
}
