using Nitra.Declarations;
using Nitra.Runtime.Binding;

namespace CSharp
{
  abstract ast UsingDirective : ScopedAst, NamespaceMember
  {
  }

  declaration UsingAliasDirective : UsingDirective
  {
    symbol
    {
      Kind      = "alias";
      SpanClass = "NitraCSharpAlias";

      in ReplacementSymbol : ISymbol2;
      //check ReplacementSymbol is NamespaceSymbol on fail NamespaceOrTypeName, "Using directive can open only namespace."
    }

    ContainingScope = UsingAliasesScope;
    OpeningOut = OpeningIn;
    NamespaceOrTypeName.Scope = CurrentScope;
    Symbol.ReplacementSymbol = NamespaceOrTypeName.Ref.Symbol;


    NamespaceOrTypeName : QualifiedReference;
  }

  ast UsingOpenDirective : UsingDirective
  {
    NamespaceOrTypeName.Scope = CurrentScope;
    OpeningOut = NamespaceOrTypeName.Ref.Symbol.Scope :: OpeningIn;

    NamespaceOrTypeName : QualifiedReference;
  }
}
