using CSharp.Utils;
using Nitra.Runtime.Binding;

namespace CSharp
{
  abstract declaration Namespace : NamespaceMember
  {
    sealed symbol
    {
      out MemberScope : TableScope = TableScope(ToString());
    }
  }

  declaration ImplicitNamespace : Namespace
  {
    inout ParentPipe : NamespaceSymbol;

    Parent          = ParentPipeIn;
    Symbol.Parent   = Parent;
    ContainingScope = ParentPipeIn.MemberScope;
    ParentPipeOut   = Symbol;
  }

  declaration ExplicitNamespace : Namespace
  {
    Path.ParentPipeIn               = Parent;
    ExternAlias.ScopeIn             = Scope;
    UsingDirectives.OpeningIn       = [];
    UsingDirectives.ContainingScope = TableScope(ToString());
    UsingDirectives.CurrentScope    = ExternAlias.ScopeOut;
    ContainingScope                 = Path.ParentPipeOut.MemberScope;
    Members.Parent                  = Symbol;
    Symbol.Parent                   = Parent;
    Members.Scope                   = Utils.MakeMembersScope(MakeEnteredScope(Scope, Parent, Symbol), UsingDirectives.OpeningOut, UsingDirectives.ContainingScope);

    Path            : ImplicitNamespace*;
    ExternAlias     : ExternAliasDirective*;
    UsingDirectives : UsingDirective*;
    Members         : NamespaceMember*;
  }
}
