using CSharp.Utils;
using Nemerle.Collections;

using Nitra;
using Nitra.Declarations;
using Nitra.Runtime.Binding;
using Nitra.Internal;

using System.Linq;
using SCG = System.Collections.Generic;

namespace CSharp
{
  abstract declaration Delegate : GenericType
  {
    symbol
    {
      out ParameterScope : TableScope = TableScope("parameters");
      in  ReturnType     : TypeReference;
    }

    ReturnType.Scope           = TypeParameterConstraints.Scope;
    Parameters.ContainingTable = Symbol.ParameterScope;
    Parameters.CurrentScope    = TypeParameterConstraints.Scope;

    ReturnType               : QualifiedReference;
    Parameters               : FormalParameter*;
  }

  declaration TopDelegate    : Delegate, NamespaceMemberDeclaration { symbol { Kind = "delegate"; SpanClass = NitraCSharpLanguage.TypeSpanClass; } ContainingTable = Parent.MemberTable; }
  declaration NestedDelegate : Delegate, TypeMember                 { symbol { Kind = "delegate"; SpanClass = NitraCSharpLanguage.TypeSpanClass; } ContainingTable = Parent.MemberTable; }
}
