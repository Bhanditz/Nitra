using CSharp.Symbols;
using Nitra;
using Nitra.Runtime.Binding;

using System.Linq;

namespace CSharp
{
  abstract declaration NamespaceOrType
  {
    in Parent       : NamespaceOrTypeSymbol;
  }

  abstract declaration NamespaceMember : NamespaceOrType
  {
    in Scope : Scope;
  }

  map syntax TopDeclarations.NamespaceMemberDeclaration -> NamespaceMember
  {
    | Namespace -> Namespace
      {
        Name = try NamespaceName.Names.Item1.Last().GetAst() catch { _ is MissingException => Name(File, NSpan(Span.StartPos), "#Missing") };
        NamespaceName.Names.Item1   -> Path;
        ExternAliasDirectives       -> ExternAlias;
        UsingDirectives             -> UsingDirectives;
        NamespaceMemberDeclarations -> Members;
      }
    | Type -> TypeDeclaration
  }
}