using Nitra;
using Nitra.Runtime.Binding;

using System.Linq;

namespace CSharp
{
  abstract ast BindableAst
  {
  stage 1:
    in Scope : Scope;
  }

  abstract declaration NamespaceMember : BindableAst
  {
    symbol
    {
      in Parent : NamespaceSymbol;
    }

    in Parent  : NamespaceSymbol;
  }

  map syntax TopDeclarations.NamespaceMemberDeclaration -> NamespaceMember
  {
    | Namespace ->
      ExplicitNamespace
      {
        NamespaceName.Name          -> Name;
        NamespaceName.Path(ImplicitNamespaceTag{}) -> Path;
        ExternAliasDirectives       -> ExternAlias;
        UsingDirectives             -> UsingDirectives;
        NamespaceMemberDeclarations -> Members;
      }

    | Type -> TypeDeclaration
  }

  ast ImplicitNamespaceTag
  {
  }

  map syntax CsIdentifiers.Name(_tag : ImplicitNamespaceTag) -> ImplicitNamespace
  {
    ImplicitNamespace
    {
      Name = this.GetAst();
    }
  }
}
