using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.IO;
using System.Console;
using SCG = System.Collections.Generic;

using Nitra;

module Program
{
  Main(fileMasks : array[string]) : int
  {
    def fileNames = FileSearcher.Search(fileMasks, SearchOption.TopDirectoryOnly);
    foreach (fileName in fileNames)
    {
      def text         = File.ReadAllText(fileName);
      def source       = SourceSnapshot(text, fileName);
      def parseResult  = CSharp.Main.CompilationUnit.Parse(source);
      def parseTree    = CSharp.MainParseTree.CompilationUnit.CreateParseTree(parseResult);
      def visitor      = CSharpVisitor();
      def newParseTree = parseTree.Apply(visitor);
      def newFileName  = Path.Combine(Path.GetDirectoryName(fileName), Path.GetFileNameWithoutExtension(fileName) + ".converted" + Path.GetExtension(fileName));
      def newText      = newParseTree.ToString();
      File.WriteAllText(newFileName, newText);
    }
    0
  }
}
