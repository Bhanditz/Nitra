using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Imperative;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nemerle.Parser.Internal
{
  public class ParsedOffsets
  {
    public static MaxOffsetsCount : int { get { 20 } }

    public mutable Ofs0  : int;
    public mutable Ofs1  : int;
    public mutable Ofs2  : int;
    public mutable Ofs3  : int;
    public mutable Ofs4  : int;
    public mutable Ofs5  : int;
    public mutable Ofs6  : int;
    public mutable Ofs7  : int;
    public mutable Ofs8  : int;
    public mutable Ofs9  : int;
    public mutable Ofs10 : int;
    public mutable Ofs11 : int;
    public mutable Ofs12 : int;
    public mutable Ofs13 : int;
    public mutable Ofs14 : int;
    public mutable Ofs15 : int;
    public mutable Ofs16 : int;
    public mutable Ofs17 : int;
    public mutable Ofs18 : int;
    public mutable Ofs19 : int;

    public this()
    {
      Clear();
    }

    public Clear() : void
    {
      Ofs0  = -1;
      Ofs1  = -1;
      Ofs2  = -1;
      Ofs3  = -1;
      Ofs4  = -1;
      Ofs5  = -1;
      Ofs6  = -1;
      Ofs7  = -1;
      Ofs8  = -1;
      Ofs9  = -1;
      Ofs10 = -1;
      Ofs11 = -1;
      Ofs12 = -1;
      Ofs13 = -1;
      Ofs14 = -1;
      Ofs15 = -1;
      Ofs16 = -1;
      Ofs17 = -1;
      Ofs18 = -1;
      Ofs19 = -1;
    }

    public CopyFrom(that : ParsedOffsets) : void
    {
      Ofs0  = that.Ofs0;
      Ofs1  = that.Ofs1;
      Ofs2  = that.Ofs2;
      Ofs3  = that.Ofs3;
      Ofs4  = that.Ofs4;
      Ofs5  = that.Ofs5;
      Ofs6  = that.Ofs6;
      Ofs7  = that.Ofs7;
      Ofs8  = that.Ofs8;
      Ofs9  = that.Ofs9;
      Ofs10 = that.Ofs10;
      Ofs11 = that.Ofs11;
      Ofs12 = that.Ofs12;
      Ofs13 = that.Ofs13;
      Ofs14 = that.Ofs14;
      Ofs15 = that.Ofs15;
      Ofs16 = that.Ofs16;
      Ofs17 = that.Ofs17;
      Ofs18 = that.Ofs18;
      Ofs19 = that.Ofs19;
    }

    public IsBetterThan(that : ParsedOffsets) : bool
    {
      when (Ofs0  > that.Ofs0  ) return true;
      when (Ofs0  < that.Ofs0  ) return false;
      when (Ofs1  > that.Ofs1  ) return true;
      when (Ofs1  < that.Ofs1  ) return false;
      when (Ofs2  > that.Ofs2  ) return true;
      when (Ofs2  < that.Ofs2  ) return false;
      when (Ofs3  > that.Ofs3  ) return true;
      when (Ofs3  < that.Ofs3  ) return false;
      when (Ofs4  > that.Ofs4  ) return true;
      when (Ofs4  < that.Ofs4  ) return false;
      when (Ofs5  > that.Ofs5  ) return true;
      when (Ofs5  < that.Ofs5  ) return false;
      when (Ofs6  > that.Ofs6  ) return true;
      when (Ofs6  < that.Ofs6  ) return false;
      when (Ofs7  > that.Ofs7  ) return true;
      when (Ofs7  < that.Ofs7  ) return false;
      when (Ofs8  > that.Ofs8  ) return true;
      when (Ofs8  < that.Ofs8  ) return false;
      when (Ofs9  > that.Ofs9  ) return true;
      when (Ofs9  < that.Ofs9  ) return false;
      when (Ofs10 > that.Ofs10 ) return true;
      when (Ofs10 < that.Ofs10 ) return false;
      when (Ofs11 > that.Ofs11 ) return true;
      when (Ofs11 < that.Ofs11 ) return false;
      when (Ofs12 > that.Ofs12 ) return true;
      when (Ofs12 < that.Ofs12 ) return false;
      when (Ofs13 > that.Ofs13 ) return true;
      when (Ofs13 < that.Ofs13 ) return false;
      when (Ofs14 > that.Ofs14 ) return true;
      when (Ofs14 < that.Ofs14 ) return false;
      when (Ofs15 > that.Ofs15 ) return true;
      when (Ofs15 < that.Ofs15 ) return false;
      when (Ofs16 > that.Ofs16 ) return true;
      when (Ofs16 < that.Ofs16 ) return false;
      when (Ofs17 > that.Ofs17 ) return true;
      when (Ofs17 < that.Ofs17 ) return false;
      when (Ofs18 > that.Ofs18 ) return true;
      when (Ofs18 < that.Ofs18 ) return false;
      when (Ofs19 > that.Ofs19 ) return true;
      when (Ofs19 < that.Ofs19 ) return false;
      false;
    }
  }
}
