using Nitra;
using Nitra.Declarations;
using Nitra.Runtime.Binding;

using Color = System.Drawing.Color;

namespace Nitra
{
  declaration QualifiedIdentifier
  {
    Parts : Reference*;
  }

  declaration Language
  {
    out FileExtensions : list<string> = Properties.FileExtensionsOut;

    Properties.FileExtensionsIn = [];

    Name : Reference;
    Properties : LanguageBody*;
  }

  declarations LanguageBody
  {
    inout FileExtensions : list<string>;
    FileExtensionsOut = FileExtensionsIn;

    | SpanClassDefinition { Name : Reference; DefaultForegroundColor : Color; }
    | StartRule           { Module  : QualifiedIdentifier; Rule : QualifiedIdentifier; }
    | SyntaxModule        { Module  : QualifiedIdentifier; }
    | Extension
      {
        FileExtensionsOut = FileExtension :: FileExtensionsIn;

        FileExtension : string;
      }
  }

  map syntax LangSpec.QualifiedIdentifier -> QualifiedIdentifier
  {
    Parts.Item1 -> Parts;
  }

  map syntax LangSpec.Language -> Language
  {
    Name       -> Name;
    Properties -> Properties;
  }

  map syntax LangSpec.LanguageBody -> LanguageBody
  {
    | SpanClassDefinition { Name -> Name; DefaultForegroundColor = DefaultForegroundColor.Value(); }
    | Extension           { FileExtension = GetText(FileExtension); }
    | StartRule           { Module -> Module; Rule -> Rule; }
    | SyntaxModule        { Module -> Module;  }
  }
}
