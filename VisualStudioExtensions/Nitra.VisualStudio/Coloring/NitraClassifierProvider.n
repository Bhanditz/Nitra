using Nitra.VisualStudio.Parsing;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.ComponentModel.Composition;

using Microsoft.VisualStudio.Text.Adornments;
using Microsoft.VisualStudio.Text;
using Microsoft.VisualStudio.Text.Classification;
using Microsoft.VisualStudio.Utilities;

namespace Nitra.VisualStudio.Coloring
{
  [Export(typeof(IClassifierProvider))]
  [ContentType("text")]
  internal sealed class NitraClassifierProvider : IClassifierProvider
  {
    /// The ClassificationTypeRegistryService is used to discover the types defined in ClassificationTypeDefinitions
    [Import]
    private ClassificationTypeRegistry : IClassificationTypeRegistryService { get; set; }

    public GetClassifier(buffer : ITextBuffer) : IClassifier
    {
      if (buffer.Properties.ContainsProperty(TextBufferProperties.NitraClassifier))
        buffer.Properties[TextBufferProperties.NitraClassifier] :> NitraClassifier
      else if (buffer.Properties.ContainsProperty(TextBufferProperties.ParseAgent))
      {
        def parseAgent = buffer.Properties[TextBufferProperties.ParseAgent] :> ParseAgent;
        def classifier = NitraClassifier(parseAgent, buffer, ClassificationTypeRegistry);
        buffer.Properties.AddProperty(TextBufferProperties.NitraClassifier, classifier);
        classifier
      }
      else null
    }
  }
}
