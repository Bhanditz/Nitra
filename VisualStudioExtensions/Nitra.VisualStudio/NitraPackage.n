using Microsoft.VisualStudio.Data.Core;
using Microsoft.VisualStudio.Shell.Interop;

using System;

namespace Nitra.VisualStudio
{
  public class NitraPackage
  {
    public static mutable Instance : NitraPackage;
    
    public static Init(serviceProvider : IServiceProvider, language : Language) : void
    {
      when (Instance == null)
      {
        Instance = NitraPackage(serviceProvider, language);
      }
    }
    
    private mutable _statusbar : IVsStatusbar;
    public ServiceProvider : IServiceProvider { get; }
    public DataHostService : IVsDataHostService { get; private set; }
    public Language : Language { get; private set; }
    
    private this(serviceProvider : IServiceProvider, language : Language)
    {
      Language        = language;
      ServiceProvider = serviceProvider;
      DataHostService = serviceProvider.GetService(typeof(IVsDataHostService)) :> IVsDataHostService;
    }

    public SetStatusBarText(text : string) : void
    {
      when (_statusbar == null)
        _statusbar = ServiceProvider.GetService(typeof(SVsStatusbar)) :> IVsStatusbar;

      when (_statusbar != null)
        _ = _statusbar.SetText(text);
    }
  }
}
