using Nitra.Typing;

namespace Nitra.Compiler
{
  [Record]
  internal variant DependentPropertyRef
  {
    | Reflected
      {
        public override Mask : int { get; }
      }

    | Compiling
      {
        public          Bit  : BitField;
        public override Mask : int
        {
          get { if (Bit.IsFromFirstField) Bit.Mask else 0 }
        }
      }

    public          Symbol : DependentPropertySymbol;
    public abstract Mask   : int { get; }
  }
}
