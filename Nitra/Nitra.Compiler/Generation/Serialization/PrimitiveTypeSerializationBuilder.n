using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Serialization
{
  public class PrimitiveTypeSerializationBuilder : TypeSerializationBuilder
  {
    public override Tag : TypeTag { get; }

    public this(compiler : SerializationCompiler, type : FixedType, typeInfo : TypeInfo)
    {
      base(compiler, type);
      Tag = System.Type.GetTypeCode(typeInfo.SystemType) :> TypeTag;
    }

    public override Write(obj : PExpr) : PExpr
    {
      Formatter.WritePrimitive(Tag, obj)
    }

    public override Read(memberName : PExpr, typeTag : PExpr) : PExpr
    {
      <[
        $(Formatter.TestTypeTag(memberName, typeTag, Tag));
        $(Formatter.ReadPrimitive(Tag));
      ]>
    }
  }
}
