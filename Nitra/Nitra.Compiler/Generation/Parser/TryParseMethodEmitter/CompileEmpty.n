using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler.Parsetree;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using SCG = System.Collections.Generic;
using System.Linq;

using Nitra.Model;

using N = Nemerle.Compiler;

namespace Nitra.Compiler
{
  internal sealed partial class TryParseMethodEmitter : MethodEmitter
  {
    public override CompileEmpty(code : SCG.List[PExpr], field : SubruleCompileInfo.Empty) : void
    {
      def predicateCode = CompilePredicate(field.HeadPredicates, GotoFailParseLabel(field));
      code.Add(<[
        $(ParseLabel(field));
          _ = $(field.ToString());
          $predicateCode;

          $(AddParsedStateInfo(field, <[ 0 ]>));
          $(GotoContinueParseLabel(field));

          $(RecoveryCode());
          $(GotoFailParseLabel(field));
      ]>);
    }
  }
}
