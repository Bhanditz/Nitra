using Nitra.Declarations;
using Nitra.Ast;

using DotNet;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Imperative;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra
{
  public sealed class AstTypeUnifier : TypeUnifier
  {
    public static Instance : AstTypeUnifier = AstTypeUnifier();

    public override IsSubtype(subtype : TypeSymbol, supertype : TypeSymbol) : bool
    {
      when (supertype : object == WellKnownSymbols.AnyType)
        return true;

      when (subtype is SupportsInheritanceTypeSymbol(IsBaseTypeSetEvaluated = true, BaseTypeSet = baseTypeSet))
        return baseTypeSet.AncestorTypes.Contains(supertype);

      false
    }
  }
}
