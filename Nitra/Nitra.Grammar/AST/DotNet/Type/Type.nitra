using Nitra;
using Nitra.Ast;
using Nitra.Runtime.Binding;

using Nemerle.Collections;

using SCG = System.Collections.Generic;

namespace DotNet
{
  // enum, delegate, class, struct or interface
  abstract declaration Type : BindableAst
  {
    symbol
    {
      in Flags : ModifierSet;
      out TypeSubst : TypeSymbol = this;
    }

    Symbol.Flags        |= Modifiers.Flags;
    Modifiers.Flags      = ModifierSet(context);
    Attributes.NameScope = Scope;

    unless (Modifiers.Flags.IsEmpty || Modifiers.Flags.Equals(Symbol.Flags))
      Error("Partial declarations of type have conflicting accessibility modifiers.");

    Attributes : Attribute*;
    Modifiers  : Modifier*;
  }
}
