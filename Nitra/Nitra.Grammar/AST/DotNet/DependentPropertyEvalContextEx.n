using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Imperative;
using Nemerle.Text;
using Nemerle.Utility;

using Nitra;
using Nitra.Ast;
using Nitra.Declarations;
using Nitra.Internal;
using Nitra.ProjectSystem;

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Globalization;
using System.Linq;

using System.Threading;
using NRB = Nitra.Declarations;

namespace DotNet
{
  public partial class CompilationUnit : AstBase, IProjectSupport, NamespaceBody
  {
    private class DependentPropertyEvalContextEx : DependentPropertyEvalContext
    {
      public RootNamespace : NamespaceSymbol   { get; set; }
      public Language      : LanguageSymbol    { get; set; }
      public Declaration   : DeclarationSymbol { get; set; }
    }
    
    public static GetRootNamespace(this context : DependentPropertyEvalContext) : NamespaceSymbol
    {
      (context :> DependentPropertyEvalContextEx).RootNamespace
    }

    public static GetLanguage(this context : DependentPropertyEvalContext) : LanguageSymbol
    {
      (context :> DependentPropertyEvalContextEx).Language
    }

    public static GetDeclaration(this context : DependentPropertyEvalContext) : DeclarationSymbol
    {
      (context :> DependentPropertyEvalContextEx).Declaration
    }
  }
}
