using DotNet;

using Nitra.AstUtils;
using Nitra.Runtime.Binding;

using System.Collections.Generic;

namespace Nitra.Ast
{
  abstract declaration AstType : Type
  {
    symbol
    {
      Kind = "ast type";
    }
  }

  declaration ListAstType : AstType
  {
    symbol
    {
      in ElemType  : AstTypeSymbol;

      ToString = ElemType + "*";
      ToXaml = ToString();
    }
  }

  ast ListAstReference : QualifiedReference
  {
    Elem.Arity  = 0;
    Elem.Scope  = Scope;
    Ref         = AstUtils.CreateListAstType(this, Elem.Ref, context);

    Elem : QualifiedReference;
  }

  declaration OptionAstType  : AstType
  {
    symbol
    {
      in ValueType : AstTypeSymbol;

      ToString = "option(" + ValueType + ")";
      ToXaml = ToString();
    }
  }

  ast OptionAstReference : QualifiedReference
  {
    Value.Arity = 0;
    Value.Scope = Scope;
    Ref         = AstUtils.CreateOptionAstType(this, Value.Ref, context);

    Value : QualifiedReference;
  }

  declaration ValueAstType : AstType
  {
    symbol
    {
      in ValueType : TypeSymbol;

      ToString = "ValueAst[" + ValueType + "]";
      ToXaml = ToString();
    }
  }
}
