using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using Nitra.Runtime.Binding;
using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Ast
{
  public partial class UsingAliasDirectiveSymbol : DeclaredSymbol
  {
    public override Scope            : Scope     { get { if (IsReplacementSymbolEvaluated) ReplacementSymbol.Scope else EmptyScope.Instance } }
  }
  
  public partial interface NamespaceMemberDeclarationSymbol : ISymbol2
  {
  }
  
  public partial class NamespaceSymbol : DeclaredSymbol, NamespaceMemberDeclarationSymbol
  {
    public override Scope       : Scope           { get { MemberTable } }
  
    public override IsSameIdentity(candidate : Declaration) : bool { SymbolUtils.IsSameIdentity(0, candidate) }
    public override CanMerge(candidate : Declaration) : bool { candidate is Namespace }
  }
}
