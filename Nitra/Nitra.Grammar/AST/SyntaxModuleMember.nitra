using Nemerle.Collections;
using Nitra.AstUtils;
using Nitra.Runtime.Binding;

using System.Collections.Generic;

namespace Nitra.Ast
{
  abstract declaration SyntaxModuleMemberDeclaration : SyntaxModuleMember
  {
    symbol
    {
      in Parent : SyntaxModuleSymbol;
    }

    Symbol.Parent   = Parent;
  }
  
  abstract ast SyntaxModuleMember : BindableAst, ScopedAst
  {
    inout Literals : Map[string, string];
    in    Parent   : SyntaxModuleSymbol;

    ContainingTable = Parent.MemberTable;
  }

  ast ExtendRule : SyntaxModuleMember
  {
  }

  ast RuleAlias : SyntaxModuleMember
  {
  }

  ast TokenLiteral : SyntaxModuleMember
  {
    LiteralsOut = UpdateLiterals(LiteralsIn, Literals, Name.ValueOrDefault);

    Name : string;
    Literals : StringLiteral*;
  }

  ast KeywordRegex : SyntaxModuleMember
  {
  }
}
