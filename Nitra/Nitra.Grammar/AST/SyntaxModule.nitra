using DotNet;
using Nitra.Runtime.Binding;
using Nemerle.Collections;

namespace Nitra.Ast
{
  declaration SyntaxModule : DeclarationSite, NamespaceMemberDeclaration
  {
    symbol
    {
      Kind      = "syntax module";
      SpanClass = NitraLang.ModuleSpanClass; // NitraLang.SyntaxModuleSpanClass;
      Scope     = MemberTable;

      in Literals : Map[string, string];
    }

    Usings.LiteralsIn        = Map();
    Usings.CurrentScope      = Scope;
    Usings.OpeningIn         = EmptyScope.Instance;
    Usings.UsingAliasesScope = TableScope("aliases", null);

    Members.LiteralsIn = Usings.LiteralsOut;
    Members.Parent = Symbol;
    Members.Scope = AstUtils.MakeMembersScope(Scope, Usings.OpeningOut, Usings.UsingAliasesScope)
                            .HideWith(Symbol.MemberTable);  // TODO: need check
    Symbol.Literals = Members.LiteralsOut;

    Usings  : SyntaxModuleUsingDirective*;
    Members : SyntaxModuleMember*;
  }
}
