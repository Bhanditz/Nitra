using Nitra.AstUtils;
using Nitra.Runtime.Binding;

using R  = Nitra.Ast.RuleExpressions;
using RX = Nitra.Ast.RegexExpressions;

namespace Nitra.Ast
{
  abstract declaration Rule : SyntaxElementContainer
  {
    symbol
    {
      out MemberTable : TableScope = TableScope(this.ToString());
    }
  }

  abstract declaration RegexRule : Rule
  {
    Expression.Scope = Scope;

    Expression : RX.Expression;
  }

  abstract declaration SyntaxRule : Rule
  {
    Expression.Literals = LiteralsIn;
    Expression.Scope = Scope;

    Expression : R.Expression;
  }

  abstract declaration SimpleRule : SyntaxRule { }

  abstract declaration ExtensibleRule : Rule
  {
    Members.LiteralsIn = LiteralsIn;
    Members.ContainingTable = Symbol.MemberTable;
    Members.Scope = Scope.HideWith(Symbol.MemberTable);

    Members : RuleBodyMember*;
  }
}
