using Nemerle.Collections;
using Nitra.AstUtils;
using Nitra.Runtime.Binding;

using System.Linq;
using System.Collections.Generic;

namespace Nitra.Ast
{
  abstract declaration DeclarationSite
  {
    symbol
    {
      out MemberTable : TableScope = TableScope(this.ToString(), this);
    }
  }

  abstract ast RuleBodyMember : SyntaxElementContainer
  {
    in    Parent   : DeclarationSiteSymbol;

    ContainingTable = Parent.MemberTable;
  }

  abstract declaration RuleBodyMemberDeclaration : RuleBodyMember
  {
    symbol
    {
      in Parent : DeclarationSiteSymbol;
      FullName = this.Parent.FullName + "." + this.Name;
    }

    Symbol.Parent   = Parent;
  }
  
  abstract declaration ExtensionRule : SyntaxRule, RuleBodyMemberDeclaration
  {
    sealed symbol
    {
    }
  }

  declaration ExtensionRuleWithExplicitName : ExtensionRule
  {
  }

  declaration ExtensionRuleWithInferredName : ExtensionRule
  {
    Symbol = Parent.MemberTable.Define(this, context, AstUtils.CreateName(File, Fields.DesiredName.FirstOrDefault()));
  }

  declaration Precedence : RuleBodyMemberDeclaration
  {
  }

  declaration RuleMethod : RuleBodyMemberDeclaration
  {
  }

  declaration RuleMethodOverride : RuleBodyMemberDeclaration
  {
  }

  declaration RuleMethodMissing : RuleBodyMemberDeclaration
  {
  }
}
