using DotNet;

using Nemerle.Collections;

using Nitra.AstUtils;
using Nitra.Runtime.Binding;

using System.Collections.Generic;

using R  = Nitra.Ast.RuleExpressions;
using RX = Nitra.Ast.RegexExpressions;

namespace Nitra.Ast
{
  declaration RuleField : BindableAst
  {
    symbol
    {
      Kind      = "rule field";
      SpanClass = DotNetLangLanguage.FieldSpanClass;

    stage 1:
      in Type : RuleTypeSymbol;
    }

    in  NameGenerator : RuleFieldNameGenerator;
    in  Literals      : Map[string, string];
    out DesiredName   : ParsedValue[string] = Expression.FieldName;

    Symbol              = ContainingTable.Define(this, context, NameGenerator.GetName(File, DesiredName));
    Symbol.Type         = Expression.Type;
    Expression.Scope    = Scope;
    Expression.Literals = Literals;

    Expression : R.Expression;
  }
}
