using Nitra.Model;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;

namespace Nitra.Typing
{
  [Record]
  public variant SyntaxMappingType : Located // TODO: this is definitly PExpr variant, and SyntaxMappingExpr is TExpr
  {
    | Undefined
    | Ast       { Type  : AstType; Expr : SyntaxMappingExpr }
    | Option    { Value : option[SyntaxMappingType] }
    | List      { Items : list[SyntaxMappingType] }
    | ParseTree { Path  : ParseTreePath }
    | Call      { Target : ParseTreePath; Arguments : list[SyntaxMappingType]; }
    | Match     { Target : ParseTreePath; Cases : list[Location * ParseTreePattern * SyntaxMappingType] }
    | DefineVariable { Symbol : AstVariableSymbol; Body : SyntaxMappingType }

    public override Location : Location { get; }

    public this([Nemerle.Internal.MappedMemberAttribute("Location")] loc : Located)
    {
      this(loc.Location)
    }
  }
}
