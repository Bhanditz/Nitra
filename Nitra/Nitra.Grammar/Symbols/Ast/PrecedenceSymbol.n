using Nitra.Model;
using Nitra.ProjectSystem;
using Nitra.Serialization;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;

using G = NitraSyntaxParseTree;

namespace Nitra.Typing
{
  [Record, ExportableSymbol, ChemicalSymbol]
  public abstract class PrecedenceSymbol : MultipleDefSymbol
  {
    public abstract Owner          : ExtensibleRuleSymbol { get; }
    public override Description    : string               { get { "precedence" } }
  }

  public sealed class ParsedPrecedenceSymbol : PrecedenceSymbol
  {
    private _node : G.RuleBodyMember.Precedence;

    public override Owner : ExtensibleRuleSymbol { get; }

    public this(node : G.RuleBodyMember.Precedence, owner : ExtensibleRuleSymbol)
    {
      base(node.PrecedenceName);
      AssemblyId   = AssemblyIds.CurrentAssembly;
      Owner = owner;
      _node = node;
    }
  }
}
