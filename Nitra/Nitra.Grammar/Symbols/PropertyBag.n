using Nitra;
using Nitra.ProjectSystem;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Typing
{
  public sealed class PropertyBag
  {
    public this(symbol : Symbol)
    {
      _symbol = symbol;
      _table  = Dictionary(StringComparer.Ordinal);
    }

    private _symbol : Symbol;
    private _table  : Dictionary[string, Location * object];

    public HasValue(name : string) : bool
    {
      _table.ContainsKey(name)
    }

    public SetProperty[T](name : string, loc : Location, value : T) : void
    {
      mutable existingValue;
      if (_table.TryGetValue(name, out existingValue))
        using (rootError = _symbol.Node.Project.RootError(loc, $"Duplicated assignment of '$name' property"))
          rootError.Hint(existingValue[0], "First assigned here");
      else
        _table.Add(name, (loc, value))
    }

    public GetProperty[T](name : string, defaultValue : T) : T
    {
      mutable existingValue;
      if (_table.TryGetValue(name, out existingValue))
        existingValue[1] :> T
      else
        defaultValue
    }
  }
}
