using Nitra.Model;
using Nitra.ProjectSystem;
using Nitra.Typing.RuleMethod;
using Nitra.Serialization;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.IO;
using SCG = System.Collections.Generic;

using G = NitraSyntaxParseTree;

namespace Nitra.Typing
{
  [Record, ExportableSymbol, ChemicalSymbol]
  public abstract class SimpleDeclarationPropertySymbol : DeclarationPropertySymbol
  {
    public override IsDependent : bool   { get { false } }
    public override Description : string { get "simple declaration property" }
  }

  public sealed class ParsedSimpleDeclarationPropertySymbol : SimpleDeclarationPropertySymbol
  {
    private _node : G.DeclarationMember.SimpleProperty;

    public this(node : G.DeclarationMember.SimpleProperty)
    {
      base(node.Name, node.Name.Value());
      _node = node;
    }

    public override Type : NType { get { _node.Type } }
  }
}
