using Nitra.Model;
using Nitra.ProjectSystem;
using Nitra.Runtime;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;

using G = NitraSyntaxParseTree;

namespace Nitra.Typing
{
  public partial module TypingUtils
  {
    internal BindAstSymbolFromMappingExtension(baseAst : AstSymbol, name : G.Identifier, context : Context) : SymbolRef[AstSymbol]
    {
      def candidates    = baseAst.Node.BindMany(name.Location);
      def bindingResult = 
        if (candidates is [])
          context.BindMany(name.Location)
        else
          BindingUtils.MakeBindingResult(name.Location, candidates);
      Utils.MakeSymbolRefWithMessages(bindingResult, context)
    }
  }
}
