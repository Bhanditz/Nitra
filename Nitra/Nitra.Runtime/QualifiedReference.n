using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Runtime
{
  public class QualifiedReference
  {
    _references     : array[Reference];
    public HashCode : int;
    public Span     : NSpan;
    
    private this(references : array[Reference], span : NSpan)
    {
      Span        = span;
      _references = references;
      
      mutable hashCode;
      foreach (reference in _references)
        hashCode ^= reference.GetHashCode();
      
      HashCode = hashCode;
    }
    
    public static Create[T](parseTrees : ListParseTree[T]) : QualifiedReference
      where T : ParseTree
    {
      def len = parseTrees.Count();
      def result = array(len);
      foreach (parseTree in parseTrees with i)
      {
        def name = parseTree.GetText();
        def span = parseTree.Location.Span;
        def reference = Reference(name, span);
        result[i] = reference;
      }
      
      QualifiedReference(result, parseTrees.Location.Span)
    }
  }
}
