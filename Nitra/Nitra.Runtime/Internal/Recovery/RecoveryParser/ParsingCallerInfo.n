using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Imperative;
using Nemerle.Extensions;

using Nitra.Runtime.Reflection;

using System;
using System.Linq;

using SCG = System.Collections.Generic;

namespace Nitra.Internal.Recovery
{
  [Record, StructuralEquality]
  public class ParsingCallerInfo
  {
    public Sequence     : ParsingSequence;
    public State        : int;
    
    [RecordIgnore, EqualsIgnore]
    public mutable Mask : int;
    
    public ParsingState : ParsingState { get { this.Sequence.States[State] } }
    public IsComplete   : bool         { get { State == -1 } }

    public override ToString() : string
    {
      def sb = Text.StringBuilder();
      this.Sequence.ToString(sb, State);
      sb.ToString()
    }
  }
}
