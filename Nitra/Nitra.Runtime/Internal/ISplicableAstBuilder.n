using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;

namespace Nitra.Internal
{
  public interface ISplicableAstBuilder[T] : IExtensibleRuleAstFactory[T]
  {
    Text(text : string, startPos : int, endPos : int) : T;
    SkipAny(startPos : int, endPos : int) : T;
    Regular(ruleDescriptor : RegularRuleDescriptor, startPos : int, endPos : int) : T;
    Syntax(ruleDescriptor : RuleDescriptor, startPos : int, endPos : int, members : array[T]) : T;
    Missing(ruleDescriptor : RuleDescriptor, pos : int) : T;
    OptionSome(item : T) : T;
    OptionNone(pos : int) : T;
    OptimizedOption(value : bool) : T;
    Tuple(params items : array[T]) : T;
    OptimizedList(count : int) : T;
    List(items : List[T]) : T;
    EmptyList(pos : int) : T;
  }
}
