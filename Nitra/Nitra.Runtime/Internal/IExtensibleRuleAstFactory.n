using Nitra.Runtime;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Internal
{
  public interface IExtensibleRuleAstFactory[T]
  {
    CreateAmbiguous(sourceSnapshot : ISourceSnapshotProvider, prefixStartPos : int, pos : int, ambiguilitys : array[T]) : T;
    CreateMissing(sourceSnapshot : ISourceSnapshotProvider, pos : int) : T;
    CreatePrefix(pos : ref int, astPtr : int, ruleParser : ExtensionRuleParser, parseResult : ParseResult) : T;
    CreatePostfix(prefix : T, prefixStartPos : int, pos : ref int, astPtr : int, ruleParser : ExtensionRuleParser, parseResult : ParseResult) : T;
  }
}
