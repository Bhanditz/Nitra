using Nitra.Declarations;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Imperative;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Runtime.Binding
{
  [Record]
  public abstract class MemberSymbol : Symbol2, IMemberSymbol
  {
    public Parent : IContainer { get; }

    public override FullName : string
    {
      get
      {
        def loop(node : IMemberSymbol, sb : Text.StringBuilder) : void
        {
          when ((node.Parent : object) is IMemberSymbol as parent)
          {
            loop(parent, sb);
            when ((parent.Parent : object) is IMemberSymbol)
              _ = sb.Append('.');
            _ = sb.Append(node.Name);
          }
        }
        
        def sb = Text.StringBuilder();
        loop(this, sb);
        sb.ToString()
      }
    }
  }
}
