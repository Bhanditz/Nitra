using Nitra.Declarations;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Imperative;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Runtime.Binding
{
  public interface IMembersSymbol : ISymbol2
  {
    Parent : HierarchicalSymbol { get; }
  }
  
  [Record]
  public abstract class MembersSymbol : Symbol2, IMembersSymbol
  {
    public Parent : HierarchicalSymbol { get; }

    public override FullName : string
    {
      get
      {
        def loop(node : this, sb : Text.StringBuilder) : void
        {
          when (node.Parent != null)
          {
            loop(node.Parent, sb);
            when (node.Parent.Parent != null)
              _ = sb.Append('.');
            _ = sb.Append(node.Name);
          }
        }
        
        def sb = Text.StringBuilder();
        loop(this, sb);
        sb.ToString()
      }
    }
  }
}
