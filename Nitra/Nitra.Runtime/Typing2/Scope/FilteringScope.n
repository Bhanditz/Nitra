using Nitra.Declarations;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Imperative;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

// TODO: rename Symbol2 to Symbol and remove follow line
using Symbol  = Nitra.Runtime.Binding.Symbol2;
using ISymbol = Nitra.Runtime.Binding.ISymbol2;

namespace Nitra.Runtime.Binding
{
  [Record]
  public class FilteringScope : Scope
  {
    public Scope     : Scope               { get; }
    public Predicate : Func[ISymbol, bool] { get; }

    public override BindMany(reference : Reference, results : ref LightList[ISymbol]) : void
    {
      mutable notFilteredResults = LightList();
      Scope.BindMany(reference, ref notFilteredResults);
      foreach (sym when Predicate.Invoke(sym) in notFilteredResults)
        results.Add(sym);
    }

    public override MakeCompletionList(prefix : string) : Seq[ISymbol]
    {
      Scope.MakeCompletionList(prefix).Where(Predicate)
    }

    public override ToString() : string
    {
      "Filter"
    }
  }
}
