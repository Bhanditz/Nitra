using Nitra.Declarations;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Imperative;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

// TODO: rename Symbol2 to Symbol and remove follow line
using Symbol = Nitra.Runtime.Binding.Symbol2;
using ISymbol = Nitra.Runtime.Binding.ISymbol2;

namespace Nitra.Runtime.Binding
{
  public abstract class Scope
  {
    public abstract BindMany(reference : Reference, results : ref LightList[ISymbol]) : void;
    public abstract MakeComletionList(prefix : string) : Seq[ISymbol];

    public Bind(reference : Reference) : ISymbol
    {
      def sym = TryBind(reference);
      SymbolUtils.ReportError(reference, sym);
      sym
    }

    /// Если не может связать возвращает AmbiguousSymbol или UnresolvedSymbol.
    public TryBind(reference : Reference) : ISymbol
    {
      mutable result = LightList();
      BindMany(reference, ref result);
      match (result.Count)
      {
        | 0 => UnresolvedSymbol(reference)
        | 1 => result[0]
        | _ => AmbiguousSymbol(result.ToNList())
      }
    }
  }
}
