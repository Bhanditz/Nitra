using Nitra.ProjectSystem;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;

namespace Nitra.Declarations
{
  public module AstContext
  {
    [ThreadStatic]
    private static mutable _state : ICompilerMessages;

    public static CompilerMessages : ICompilerMessages
    {
      get { _state }
    }

    internal Set(compilerMessage : ICompilerMessages) : ValueOption[ICompilerMessages]
    {
      def oldState = _state;
      _state = compilerMessage;
      VSome(oldState)
    }

    internal Restore(stateOpt : ValueOption[ICompilerMessages]) : void
    {
      when (stateOpt is VSome(state))
        _state = state;
    }
  }
}
