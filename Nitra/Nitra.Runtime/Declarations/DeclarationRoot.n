using Nitra.ProjectSystem;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Declarations
{
  public sealed class DeclarationRoot[TContent] : Declaration[IDeclaration]
    where TContent : IDeclaration
  {
    public override File    : File         { get; }
    public override Span    : NSpan        { get { NSpan(0, File.Length) } }
    public override Parent  : IDeclaration { get null }
    public          Content : TContent     { get; private set }

    private this(file : File)
    {
      this.File = file;
    }

    public override EvalFields(context : EvalDeclarationFieldsContext) : void
    {
      Content.EvalFields(context)
    }

    public static Create(file : File, parseTree : IDeclarableParseTree[IDeclaration, TContent]) : DeclarationRoot[TContent]
    {
      def declarationRoot = DeclarationRoot(file);
      declarationRoot.Content = parseTree.GetDeclaration(declarationRoot);
      declarationRoot
    }
  }
}
