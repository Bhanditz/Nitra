using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using SCG = System.Collections.Generic;

namespace Nitra
{
  [Record]
  public sealed class AmbiguousOptionAst[T] : OptionAst[T], IAmbiguousAst
    where T : IAst
  {
    public Ambiguities : array[OptionAst[T]] { get }

    public AmbiguityType  : AstAmbiguityType { get AstAmbiguityType.Recovery }

    public override Location : Nitra.Location { get Ambiguities[0].Location }

    public override Item : T { get throw NotSupportedException("Option is ambiguous") }

    public override IsSome : bool { get throw NotSupportedException("Option is ambiguous") }

    public override ToNOption() : option[T] { throw NotSupportedException("Option is ambiguous") }
  }
}
