using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using SCG = System.Collections.Generic;

namespace Nitra
{
  public sealed class AmbiguousOptionAst[T] : OptionAst[T], IAmbiguousParseTree
    where T : IParseTree
  {
    public this(ambiguities : array[OptionAst[T]])
    {
      Ambiguities = ambiguities;
    }

    public override IsAmbiguous   : bool                { get true }
    public          Ambiguities   : array[OptionAst[T]] { get }
    public          AmbiguityType : ParseTreeAmbiguityType { get ParseTreeAmbiguityType.Recovery }
    public override Location      : Location            { get Ambiguities[0].Location }
    public override Value         : T                   { get throw NotSupportedException("Option is ambiguous") }
    public override HasValue      : bool                { get throw NotSupportedException("Option is ambiguous") }
  }
}
