using System.Threading;
using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.ClientServer.Server
{
  public class SpanClassesManager
  {
     mutable _counter      : int;
            _spanClassMap : ConcurrentDictionary[SpanClass, int] = ConcurrentDictionary();
            
    // TODO: add support of extensions SpanClass 
            
    public Add(spanClass : SpanClass) : int
    {
      def id = Interlocked.Increment(ref _counter);
      if (_spanClassMap.TryAdd(spanClass, id))
        id
      else
        _spanClassMap[spanClass]
    }
    
    public Item[spanClass : SpanClass] : int
    {
      get
      {
        mutable id;
        if (_spanClassMap.TryGetValue(spanClass, out id))
          id
        else
          Add(spanClass)
      }
    }
  }
}
