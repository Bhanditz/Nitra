using Nemerle;
using System;
using SCG = System.Collections.Generic;

namespace Nitra
{
  public sealed class EmptyListParseTree[T] : ListParseTree[T]
    where T : IParseTree
  {
    public this(location : Location)
    {
      this.Location = location;
    }

    public override Location          : Location { get }
    public override Count             : int      { get 0 }
    public override Item[index : int] : T        { get { _ = index; throw ArgumentOutOfRangeException("index") } }

    public override UpdateItems(newItems : SCG.List[T]) : ListParseTree[T]
    {
      if (newItems.Count > 0)
        ConcreteListParseTree(this.Location, newItems)
      else
        this
    }

    public override GetEnumerator() : SCG.IEnumerator[T]
    {
      ([] : SCG.IEnumerable[T]).GetEnumerator()
    }

    public override Contains(item : T) : bool
    {
      IgnoreParams();
      false
    }

    public override CopyTo(@array : array[T], arrayIndex : int) : void
    {
      IgnoreParams();
    }

    public override IndexOf(item : T) : int
    {
      IgnoreParams();
      -1
    }
  }
}
