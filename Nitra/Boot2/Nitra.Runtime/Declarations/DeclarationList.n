using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace Nitra.Declarations
{
  public sealed class DeclarationList[T] : Declaration, IEnumerable[T]
    where T : Declaration
  {
    public this(parent : Declaration, span : NSpan)
    {
      Parent = parent;
      Span   = span;
    }

    public Initialize(items : IEnumerable[T]) : void
    {
      assert(_items == null);
      _items = items.ToArray();
    }

    private mutable _items           : array[T];

    public override Parent            : Declaration { get; }
    public override Span              : NSpan       { get; }
    public          IsEmpty           : bool        { get { assert(_items != null); _items.Length == 0 } }
    public          Length            : int         { get { assert(_items != null); _items.Length } }
    public          Item[index : int] : T           { get { assert(_items != null); _items[index] } }

    public GetEnumerator() : IEnumerator[T]
    {
      assert(_items != null);
      (_items : IEnumerable[T]).GetEnumerator()
    }
  }
}
