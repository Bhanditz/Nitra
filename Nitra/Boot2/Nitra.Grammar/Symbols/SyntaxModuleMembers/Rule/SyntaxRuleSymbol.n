using Nitra.ProjectSystem;
using Nitra.Model;
using Nitra.Typing.RuleMethod;

using Nemerle;
using System;

namespace Nitra.Typing
{
  [Record]
  public abstract class SyntaxRuleSymbol : RuleDefSymbol
  {
    public abstract Rule             : Rule.Sequence                {           get; }
    public          NonVoidSubRules  : list[Rule]                   { [Memoize] get { Rule.Rules.Filter(rule => !(rule.Type is RuleType.Void)) } }
    public          SubRules         : list[Rule]                   {           get { Rule.Rules } }
    public          Sequence         : SequenceCompileInfo.Root     { [Memoize] get { SequenceCompileInfo.MakeSequenceCompileInfo(this) } }
    public override IsToken          : bool                         {           get { Options.IsTokenRule } }
    public abstract SyntaxMappings   : list[SyntaxMappingSymbol]    {           get; }

    internal virtual AddSyntaxMapping(symbol : SyntaxMappingSymbol) : void
    {
      assert(Node != null);
      Node.Project.Error(symbol.FirstLocation, "AST mapping is not allowed here")
    }
  }
}
