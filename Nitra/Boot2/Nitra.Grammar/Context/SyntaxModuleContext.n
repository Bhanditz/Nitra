using Nitra.ProjectSystem;
using Nitra.Model;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using G = NitraSyntaxParseTree;

namespace Nitra.Typing
{
  public sealed class SyntaxModuleContext : EnteredScopeContext
  {
    public SyntaxModuleSymbol : ParsedSyntaxModuleSymbol { get; }

    public this(parent : Context, name : G.Identifier)
    {
      base(parent);
      def p = this.GetParent.[EnteredNamespaceContext]();
      def compilerMessages = Project;
      SyntaxModuleSymbol = p.Namespace.BindByHierarchy.[ParsedSyntaxModuleSymbol](name, compilerMessages).GetValue(compilerMessages);
    }

    public override CurrentSymbols  : list[Symbol] { get { [SyntaxModuleSymbol] } }

    public override ToString() : string
    {
      SyntaxModuleSymbol.Description + " " + SyntaxModuleSymbol.Name
    }
  }
}
