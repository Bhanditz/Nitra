using Nemerle.Collections;
using Nemerle.Parser;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Console;
using System.Linq;

class CompilationUnit
{
  
}

[Record]
class NamespaceMember : Located { }

[ParserGrammar(Options = EmitDebugSources,
  grammar 
  {
    any = ['\u0000'..'\uFFFF'];
    
    [StartRule]
    Start : CompilationUnit = CompilationUnit !any;
    
    CompilationUnit           : CompilationUnit = NamespaceBody;
    NamespaceBody             : NamespaceBody   = NamespaceMember*;
    NamespaceMember           : NamespaceMember;
    UsingDeclaration          is NamespaceMember;
    NamespaceDeclaration      is NamespaceMember;
    GlobalAttributDeclaration is NamespaceMember;
    ClassDeclaration          is NamespaceMember;
    
    //semicolon : NToken      = ";"s;
    //semicolonOpt            = (";"s)?;

    #region Line terminators

    newLineCharacter = '\n'
                      / '\r'
                      / '\u2028'    /*  line separator       */
                      / '\u2029';   /*  paragraph separator  */
    newLine   = "\r\n" / newLineCharacter;

    #endregion

    #region White space

    whitespace = [Zs]
              / '\t'
              / '\v'        /*  vertial tab          */
              / '\f';       /*  form feed            */

    #endregion

    #region Spacer

    space = whitespace / newLine;

    s : void = space*;                      /* optional spacer          */
    //S : void = !identifierPartCharacters s; /* identifier break spacer  */
    #endregion
  }
)]
public partial class N2Parser
{
}

module Program
{
  Main() : void
  {
    WriteLine("Hi!");
    _ = ReadLine();
  }
}