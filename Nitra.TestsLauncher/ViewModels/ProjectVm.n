using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Collections.ObjectModel;
using System.IO;

namespace Nitra.ViewModels
{
  public class ProjectVm : FolderVm[TestVm]
  {
    public Solution: SolutionVm { get; private set }
    public override Hint: string { get { "Project" }}
    public Remove(): void {}
    public Update(_code: string, _gold: string): void {}

    public this(suite: SuiteVm, solution: SolutionVm, folder: string)
    {
      base(suite, folder);
      Solution = solution
    }
    
    public IsSingleFileTest : bool { get { Children.Count == 1 } }

    public override Name : string { get { Path.GetFileName(FullPath) + "  (Project)" }}
    
    protected override CreateChildren(): Seq[TestVm]
    {
      Directory
        .GetFiles(FullPath, "*.test")
        .OrderBy(x => x)
        .Select(TestVm(Suite, this, _));
    }
    
    public override Activate() : void
    {
      // TODO: send messages to server
    }

    public override Deactivate() : void
    {
      // TODO: send messages to server
    }
  }
}