using N2;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Imperative;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.ComponentModel.Composition;
using System.Linq;
using System.Text;
using System.Windows.Media;

using NLog;

using Microsoft.VisualStudio.Utilities;
using Microsoft.VisualStudio.Text;
using Microsoft.VisualStudio.Text.Classification;
using Microsoft.VisualStudio.Text.Editor;

namespace N2.VisualStudio
{
  [Export(typeof(IWpfTextViewCreationListener))]
  [ContentType("code")]
  [TextViewRole(PredefinedTextViewRoles.Document)]
  internal sealed class ViewCreationListener : IWpfTextViewCreationListener
  {
    _logger : Logger = LogManager.GetLogger(typeof(this).FullName);
    [Import]
    mutable _formatMapService : IClassificationFormatMapService = null;
    [Import]
    mutable classificationTypeRegistryService : IClassificationTypeRegistryService = null;
    [Import]
    private N2GlobalConfig : IN2GlobalConfig { get; set; }

    public TextViewCreated(textView : IWpfTextView) : void
    {
      _logger.Trace("TextViewCreated");
      // TODO: WORKAROUND: Надо разобраться как корректно добавлять формат для классификаторов, а этот код удалить.
      def formatMap = _formatMapService.GetClassificationFormatMap(textView);
      N2GlobalConfig.ApplySpanClassStyles(formatMap, classificationTypeRegistryService);
    }
  }
}
