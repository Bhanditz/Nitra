using System.Windows.Media;
using Microsoft.VisualStudio.Text.Editor;
using Nemerle;
using Nemerle.Collections;
using Nemerle.Imperative;
using N2;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.ComponentModel.Composition;
using System.Linq;
using System.Text;
using Microsoft.VisualStudio.Utilities;
using Microsoft.VisualStudio.Text;
using Microsoft.VisualStudio.Text.Classification;

namespace N2.VisualStudio
{
  [Export(typeof(IWpfTextViewCreationListener))]
  [ContentType("code")]
  [TextViewRole(PredefinedTextViewRoles.Document)]
  internal sealed class ViewCreationListener : IWpfTextViewCreationListener
  {
    [Import]
    mutable _formatMapService : IClassificationFormatMapService = null;
    [Import]
    mutable classificationTypeRegistryService : IClassificationTypeRegistryService = null;
    [Import]
    private N2GlobalConfig : IN2GlobalConfig { get; set; }

    public TextViewCreated(textView : IWpfTextView) : void
    {
      // TODO: WORKAROUND: Надо разобраться как корректно добавлять формат для классификаторов, а этот код удалить. 
      foreach (name in N2GlobalConfig.GetSpanClassNames())
      {
        def classificationType = classificationTypeRegistryService.GetClassificationType(name);
        def formatMap          = _formatMapService.GetClassificationFormatMap(textView);
          
        when (classificationType != null)
          formatMap.SetTextProperties(classificationType, N2GlobalConfig.GetSpanClass(name));
      }
    }
  }
}
