using System;
using System.Linq;
using System.Collections.Generic;
using System.ComponentModel.Composition;

using Microsoft.VisualStudio.Text;
using Microsoft.VisualStudio.Text.Editor;
using Microsoft.VisualStudio.Text.Tagging;
using Microsoft.VisualStudio.Utilities;

namespace N2.VisualStudio
{
  [Export(typeof(IViewTaggerProvider) )]
  [ContentType("plaintext")]
  [TagType(typeof(TextMarkerTag))]
  internal class BraceMatchingTaggerProvider : IViewTaggerProvider
  {
    [Import]
    private GlobalConfig : IGlobalConfig { get; set; }

    public CreateTagger[T](textView : ITextView, buffer : ITextBuffer) : ITagger[T] where T : ITag
    {
      if (textView == null || textView.TextBuffer != buffer : object)
        null
      else match (GlobalConfig.GetLanguageForTextBuffer(buffer))
      {
        | VSome(language) => BraceMatchingTagger(language, textView, buffer) :> ITagger[T]
        | VNone           => null
      }
    }
  }
}