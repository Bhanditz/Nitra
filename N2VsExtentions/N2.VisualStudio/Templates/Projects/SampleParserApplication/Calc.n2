syntax module Calc
{
  using PrettyPrint;
  using Outline;
  using TokenNames;
  using StandardSpanClasses;
  using Whitespaces;
  using Identifiers;
  using CStyleComments;

  [StartRule, ExplicitSpaces]
  syntax Start = s Expression !Any;

  token Number = ['0'..'9']+ ('.' ['0'..'9']*)?;

  syntax Expression
  {
    | Number;
    | Add    = Expression sm '+' sm Expression { precedence 10; }
    | Sub    = Expression sm '-' sm Expression { precedence 10; }
    | Mul    = Expression sm '*' sm Expression { precedence 20; }
    | Div    = Expression sm '/' sm Expression { precedence 20; }
    | Pow    = Expression sm '^' sm Expression { precedence 30 right-associative; }
    | Neg    = '-' Expression                  { precedence 100; }
    | Plus   = '+' Expression                  { precedence 100; }
    | Rounds = '(' Expression ')'
  }

  extend syntax IgnoreToken
  {
    | [SpanClass(Comment)] SingleLineComment = SingleLineComment;
    | [SpanClass(Comment)] MultiLineComment;
  }
}
