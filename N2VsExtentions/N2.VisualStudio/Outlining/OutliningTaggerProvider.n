using Microsoft.VisualStudio.Text;
using Microsoft.VisualStudio.Text.Editor;
using Microsoft.VisualStudio.Text.Tagging;
using Microsoft.VisualStudio.Utilities;
using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.ComponentModel.Composition;
using System.Linq;

namespace N2.VisualStudio.Outlining
{
  [Export(typeof(ITaggerProvider))]
  [ContentType("text")]
  [TagType(typeof(IOutliningRegionTag))]
  class OutliningTaggerProvider : ITaggerProvider
  {
    [Import]
    private N2GlobalConfig : IN2GlobalConfig { get; set; }
    
    public CreateTagger[T](buffer : ITextBuffer) : ITagger[T]
      where T : ITag
    {
      match (N2GlobalConfig.GetLanguageForTextBuffer(buffer))
      {
        | VSome(language) =>
          def outliningTagger = OutliningTagger(N2GlobalConfig, language, buffer);
          buffer.Properties[typeof(OutliningTagger)] = outliningTagger;
          outliningTagger :> ITagger[T]
          
        | VNone           => null
      }      
    }
  }
}
