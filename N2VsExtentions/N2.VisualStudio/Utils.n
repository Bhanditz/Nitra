using Microsoft.VisualStudio.Shell;
using Microsoft.VisualStudio.Shell.Interop;
using Microsoft.VisualStudio.Text;

using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace N2.VisualStudio
{
  public enum MessageType
	{
		| Info = 0
		| Hint = 1
		| Warning = 2
	  | Error = 3
	}
    
  public module Utils
  {
    public GetLineAndColumn(this snapshot : ITextSnapshot, position : int) : int * int
    {
      def line = snapshot.GetLineFromPosition(position);
 
      (line.LineNumber, position - line.Start.Position)
    }
 
    public GetLineAndColumn(this point : SnapshotPoint) : int * int
    {
      point.Snapshot.GetLineAndColumn(point.Position)
    }
 
    public static GetPosition(this snapshot : ITextSnapshot, lineNumber : int, columnIndex : int) : int
    {
      snapshot.GetLineFromLineNumber(lineNumber).Start.Position + columnIndex;
    }
    
    public ShowMessage(this serviceProvider : IServiceProvider, message : string, messageType : MessageType) : void
    {
      def icon = 
        match (messageType)
        {
          | MessageType.Hint    => OLEMSGICON.OLEMSGICON_INFO
          | MessageType.Info    => OLEMSGICON.OLEMSGICON_INFO
          | MessageType.Warning => OLEMSGICON.OLEMSGICON_WARNING
          | MessageType.Error 
          | _                   => OLEMSGICON.OLEMSGICON_CRITICAL
        };
      def buttons = OLEMSGBUTTON.OLEMSGBUTTON_OK;
      def defaultButton = OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_FIRST;
      _ = VsShellUtilities.ShowMessageBox(serviceProvider, message, Constants.ProductName, icon, buttons, defaultButton);
    }
  }
}
