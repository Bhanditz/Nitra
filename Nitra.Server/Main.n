using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using Nitra.Messages;
using Nitra.Server;

using System;
using System.IO;
using System.IO.Pipes;
using System.Collections.Generic;
using System.Linq;

module Program
{
  Log(msg : string) : void
  {
    System.Console.WriteLine(msg);
  }
  
  Main(args : array[string]) : void
  {
    when (args.Length != 1)
    {
      Log("Invalid parameters number.");
      Environment.Exit(42);
    }

    using (pipeClient = NamedPipeClientStream(".", args[0], PipeDirection.InOut))
    {
      def router = Router();
      
      // Connect to the pipe or wait until the pipe is available.
      Console.Write("Attempting to connect to pipe...");
      pipeClient.Connect();

      Console.WriteLine("Connected to pipe.");
      Console.WriteLine("There are currently {0} pipe server instances open.", pipeClient.NumberOfServerInstances);
      //def writer = BinaryWriter(pipeClient);
      using (reader = BinaryReader(pipeClient))
      {
        def loop()
        {
          router.AddMessage(Deserializer.Deserialize(reader));
          loop()
        }
          
        loop()
      }
    }
    //Console.Write("Press Enter to continue...");
      //Console.ReadLine();
  }
}